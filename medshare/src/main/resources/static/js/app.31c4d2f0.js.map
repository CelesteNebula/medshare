{"version":3,"file":"js/app.31c4d2f0.js","mappings":"sFACEA,EAAAA,EAAAA,IACM,oB,kEAFRC,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,MACEC,GAEAC,EAAAA,EAAAA,IAAcC,IAAA,G,eCFhB,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,Q,uGCPOC,MAAM,iB,UACTT,EAAAA,EAAAA,IAEM,OAFDS,MAAM,UAAQ,EACjBT,EAAAA,EAAAA,IAAqD,OAAhDU,IAAAC,EAAwBC,IAAI,OAAOH,MAAM,W,QAE3CA,MAAM,mB,UACTT,EAAAA,EAAAA,IAAa,UAAT,QAAI,K,UAINA,EAAAA,EAAAA,IAAiC,UAAzBa,KAAK,UAAS,MAAE,K,0CAT9BZ,EAAAA,EAAAA,IAaM,MAbNE,EAaM,CAZJW,GAGAd,EAAAA,EAAAA,IAQM,MARNe,EAQM,CAPJC,GACAhB,EAAAA,EAAAA,IAIO,QAJAiB,SAAMC,EAAA,KAAAA,EAAA,IAPnBC,EAAAA,EAAAA,KAAA,IAAAC,IAO6BC,EAAAC,aAAAD,EAAAC,eAAAF,IAAW,cAAEX,MAAM,c,WACxCT,EAAAA,EAAAA,IAAkE,SAR1E,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GAQwBF,EAAAG,SAAQD,GAAEV,KAAK,OAAOY,YAAY,OAAOC,SAAA,I,iBAAzCL,EAAAG,aAAQ,SACxBxB,EAAAA,EAAAA,IAAoE,SAT5E,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GASwBF,EAAAM,SAAQJ,GAAEV,KAAK,WAAWY,YAAY,KAAKC,SAAA,I,iBAA3CL,EAAAM,YAChBC,GAAiC,KAEnC5B,EAAAA,EAAAA,IAAuE,UAA9D6B,QAAKX,EAAA,KAAAA,EAAA,OAAAE,IAAEC,EAAAS,oBAAAT,EAAAS,sBAAAV,IAAoBX,MAAM,gBAAe,Y,gCCT/D,MAAMsB,EAAMC,EAAAA,EAAMC,OAAO,CAEvBC,QAAS,yBACTC,QAAS,CACP,eAAgB,oCAKpBJ,EAAIK,aAAaC,QAAQC,KAAKC,IAC5B,MAAMC,EAAQC,eAAeC,QAAQ,SAKrC,OAJAC,QAAQC,IAAI,YAAYJ,GACpBA,IACFD,EAAOJ,QAAQ,iBAAmBK,GAE7BD,CAAM,IACZM,GACMC,QAAQC,OAAOF,KAGxB,QCpBA,MAAMG,EAAQC,MAAOzB,EAAUG,KAE7Bc,eAAeS,WAAW,SAC1BT,eAAeS,WAAW,YAC1B,IACE,MAAMC,QAAiBpB,EAAIqB,KAAK,SAAU,CACxCC,SAAU7B,EACVG,SAAUA,IAGNa,EAAQW,EAASG,KAEvB,OADAX,QAAQC,IAAI,mBAAmBJ,GAC3BA,GAASA,EAAMe,WAAW,YAC5Bd,eAAee,QAAQ,QAAShB,GAChCC,eAAee,QAAQ,WAAYhC,GAC5B,CAAEiC,SAAS,EAAMjB,MAAOA,IAExB,CAAEiB,SAAS,EAAOC,QAAS,oBAEtC,CAAE,MAAOb,GACPF,QAAQE,MAAM,eAAgBA,EAAMM,UAEpC,MAAMQ,EAAed,EAAMM,UAAYN,EAAMM,SAASG,KAAQT,EAAMM,SAASG,KAAKT,OAASA,EAAMM,SAASG,KAAQ,eAClH,MAAO,CAAEG,SAAS,EAAOC,QAASC,EACpC,GAGIC,EAAYN,GACTvB,EAAIqB,KAAK,YAAaE,GFT/B,OACEO,KAAAA,GACE,MAAMrC,GAAWsC,EAAAA,EAAAA,IAAI,IACfnC,GAAWmC,EAAAA,EAAAA,IAAI,IACfC,GAASC,EAAAA,EAAAA,MAET1C,EAAc2B,UAClB,IACE,MAAMgB,QAAejB,EAAMxB,EAAS0C,MAAOvC,EAASuC,OAChDD,EAAOR,QACTM,EAAOI,KAAK,qBAEZC,MAAO,SAAQH,EAAOP,UAE1B,CAAE,MAAOb,GACPuB,MAAM,oBACNzB,QAAQE,MAAM,uBAAwBA,EACxC,GAGIf,EAAqBA,KACzBiC,EAAOI,KAAK,mBAAmB,EAGjC,MAAO,CAAE3C,WAAUG,WAAUL,cAAaQ,qBAC5C,GGxCF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,SCROrB,MAAM,sB,GACTT,EAAAA,EAAAA,IAAgC,MAA5BS,MAAM,cAAa,QAAI,G,GAMvBT,EAAAA,EAAAA,IAAwC,UAAhCqE,SAAA,GAASH,MAAM,IAAG,SAAK,G,GAC/BlE,EAAAA,EAAAA,IAAkB,cAAV,KAAC,G,GACTA,EAAAA,EAAAA,IAAkB,cAAV,KAAC,G,GACTA,EAAAA,EAAAA,IAAmB,cAAX,MAAE,G,GAHVe,EACAC,EACAY,EACA0C,G,GAEFtE,EAAAA,EAAAA,IAAiC,UAAzBa,KAAK,UAAS,MAAE,G,0CAZ5BZ,EAAAA,EAAAA,IAcM,MAdNE,EAcM,CAbJW,GACAd,EAAAA,EAAAA,IAWO,QAXAiB,SAAMC,EAAA,KAAAA,EAAA,IAHjBC,EAAAA,EAAAA,KAAA,IAAAC,IAG2BC,EAAAkD,gBAAAlD,EAAAkD,kBAAAnD,IAAc,cAAEX,MAAM,iB,WAC3CT,EAAAA,EAAAA,IAAkE,SAJxE,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GAIsBF,EAAAG,SAAQD,GAAEV,KAAK,OAAOY,YAAY,OAAOC,SAAA,I,iBAAzCL,EAAAG,aAAQ,SACxBxB,EAAAA,EAAAA,IAAoE,SAL1E,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GAKsBF,EAAAM,SAAQJ,GAAEV,KAAK,WAAWY,YAAY,KAAKC,SAAA,I,iBAA3CL,EAAAM,aAAQ,SACxB3B,EAAAA,EAAAA,IAAoE,SAN1E,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GAMsBF,EAAAmD,WAAUjD,GAAEV,KAAK,OAAOY,YAAY,OAAOC,SAAA,I,iBAA3CL,EAAAmD,eAAU,SAC1BxE,EAAAA,EAAAA,IAKS,UAZf,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GAOuBF,EAAAoD,aAAYlD,GAAEG,SAAA,IAPrCgD,EAAA,YAOuBrD,EAAAoD,gBAMjBE,GAAiC,K,CAUvC,OACEd,KAAAA,GACE,MAAMrC,GAAWsC,EAAAA,EAAAA,IAAI,IACfnC,GAAWmC,EAAAA,EAAAA,IAAI,IACfU,GAAaV,EAAAA,EAAAA,IAAI,IACjBW,GAAeX,EAAAA,EAAAA,IAAI,IAEnBC,GAASC,EAAAA,EAAAA,MAETO,EAAiBtB,UACrB,IACE,MAAM2B,EAAmB,CACvBpD,SAAUA,EAAS0C,MACnBvC,SAAUA,EAASuC,MACnBM,WAAYA,EAAWN,MACvBO,aAAcA,EAAaP,aAEvBN,EAASgB,GACfR,MAAM,QACNL,EAAOI,KAAK,IACd,CAAE,MAAOtB,GACPuB,MAAM,QACNzB,QAAQE,MAAMA,EAChB,GAGF,MAAO,CACLrB,WACAG,WACA6C,aACAC,eACAF,iBAEJ,GCjDF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,yECRO9D,MAAM,oB,GACJA,MAAM,W,UACTT,EAAAA,EAAAA,IAGM,OAHDS,MAAM,QAAM,EAEfT,EAAAA,EAAAA,IAA0C,OAArCU,IAAAC,EAAwBC,IAAI,W,QAYhCH,MAAM,W,GAEJA,MAAM,U,GACJA,MAAM,a,GApBnBoE,IAAA,G,UA4BQ7E,EAAAA,EAAAA,IAAa,UAAT,QAAI,K,UAENA,EAAAA,EAAAA,IAWQ,eAVNA,EAAAA,EAAAA,IASK,YARHA,EAAAA,EAAAA,IAAY,UAAR,QACJA,EAAAA,EAAAA,IAAW,UAAP,OACJA,EAAAA,EAAAA,IAAW,UAAP,OACJA,EAAAA,EAAAA,IAAW,UAAP,OACJA,EAAAA,EAAAA,IAAY,UAAR,QACJA,EAAAA,EAAAA,IAAa,UAAT,SACJA,EAAAA,EAAAA,IAAa,UAAT,SACJA,EAAAA,EAAAA,IAAW,UAAP,UAAE,K,EAvCpB,Y,GAAA6E,IAAA,G,GAAA,Y,GAAA,Y,IAAAA,IAAA,G,WAkEU7E,EAAAA,EAAAA,IAAe,UAAX,UAAM,K,WAE8DA,EAAAA,EAAAA,IAAI,qB,WACHA,EAAAA,EAAAA,IAAI,qB,WACHA,EAAAA,EAAAA,IAAI,qB,WACHA,EAAAA,EAAAA,IAAI,qB,WACgBA,EAAAA,EAAAA,IAAI,qB,WACjGA,EAAAA,EAAAA,IAAmC,UAA3Ba,KAAK,UAAS,QAAI,K,IAzEtCgE,IAAA,G,WAgFQ7E,EAAAA,EAAAA,IAAa,UAAT,QAAI,K,WAE0DA,EAAAA,EAAAA,IAAI,qB,WACFA,EAAAA,EAAAA,IAAI,qB,WACHA,EAAAA,EAAAA,IAAI,qB,WACHA,EAAAA,EAAAA,IAAI,qB,WACHA,EAAAA,EAAAA,IAAI,qB,WACgBA,EAAAA,EAAAA,IAAI,qB,WAC7FA,EAAAA,EAAAA,IAAmC,UAA3Ba,KAAK,UAAS,QAAI,K,IAxFpCgE,IAAA,G,WA6FQ7E,EAAAA,EAAAA,IAAa,UAAT,QAAI,K,IACHS,MAAM,iB,IA9FnBoE,IAAA,G,IAAAA,IAAA,G,WAwGY7E,EAAAA,EAAAA,IAAa,UAAT,QAAI,K,GAxGpB,a,IA+GaS,MAAM,c,IA/GnBoE,IAAA,G,WAkHY7E,EAAAA,EAAAA,IAAa,UAAT,QAAI,K,IAlHpB6E,IAAA,EA2H6BpE,MAAM,S,IAC1BA,MAAM,iB,GA5Hf,Q,IA+HWA,MAAM,qB,IA/HjBoE,IAAA,EA6I2BpE,MAAM,iB,oFA7IjCR,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,OACEF,EAAAA,EAAAA,IAwHM,MAxHNG,EAwHM,EAvHJH,EAAAA,EAAAA,IAcM,MAdNc,EAcM,CAbJC,GAIAf,EAAAA,EAAAA,IAES,UAFAS,OAPfqE,EAAAA,EAAAA,IAAA,CAAAC,OAOgD,gBAAhBC,EAAAC,cAAkCpD,QAAKX,EAAA,KAAAA,EAAA,GAAAK,GAAEyD,EAAAC,YAAc,gBAAe,SAEhG,IACAjF,EAAAA,EAAAA,IAES,UAFAS,OAVfqE,EAAAA,EAAAA,IAAA,CAAAC,OAUgD,eAAhBC,EAAAC,cAAiCpD,QAAKX,EAAA,KAAAA,EAAA,GAAAK,GAAEyD,EAAAC,YAAc,eAAc,SAE9F,IACAjF,EAAAA,EAAAA,IAES,UAFAS,OAbfqE,EAAAA,EAAAA,IAAA,CAAAC,OAagD,gBAAhBC,EAAAC,cAAkCpD,QAAKX,EAAA,KAAAA,EAAA,GAAAK,GAAEyD,EAAAC,YAAc,gBAAe,SAEhG,MAEFjF,EAAAA,EAAAA,IAuGM,MAvGNgB,EAuGM,EArGJhB,EAAAA,EAAAA,IAKM,MALN4B,EAKM,EAJJ5B,EAAAA,EAAAA,IAEM,MAFNsE,EAAuB,aACbY,EAAAA,EAAAA,IAAGF,EAAAG,eAAa,IAE1BnF,EAAAA,EAAAA,IAAmC,UAA1B6B,QAAKX,EAAA,KAAAA,EAAA,OAAAE,IAAEC,EAAA+D,QAAA/D,EAAA+D,UAAAhE,KAAQ,QAGC,gBAAhB4D,EAAAC,cAAW,WAAtBhF,EAAAA,EAAAA,IAmDM,MA7EZyE,EAAA,CA4BQC,GACA3E,EAAAA,EAAAA,IAiCQ,cAhCNqF,GAYArF,EAAAA,EAAAA,IAmBQ,6BAlBNC,EAAAA,EAAAA,IAiBKC,EAAAA,GAAA,MA5DjBoF,EAAAA,EAAAA,IA2CkCjE,EAAAkE,UAAXC,K,WAAXvF,EAAAA,EAAAA,IAiBK,MAjB4B4E,IAAKW,EAAQC,I,EAC5CzF,EAAAA,EAAAA,IAAyB,WAAAkF,EAAAA,EAAAA,IAAlBM,EAAQC,IAAE,IACjBzF,EAAAA,EAAAA,IAA2B,WAAAkF,EAAAA,EAAAA,IAApBM,EAAQE,MAAI,IACnB1F,EAAAA,EAAAA,IAA0B,WAAAkF,EAAAA,EAAAA,IAAnBM,EAAQG,KAAG,IAClB3F,EAAAA,EAAAA,IAA6B,WAAAkF,EAAAA,EAAAA,IAAtBM,EAAQI,QAAM,IACrB5F,EAAAA,EAAAA,IAAkC,WAAAkF,EAAAA,EAAAA,IAA3BM,EAAQK,aAAW,IAC1B7F,EAAAA,EAAAA,IAAgC,WAAAkF,EAAAA,EAAAA,IAAzBM,EAAQM,WAAS,IACxB9F,EAAAA,EAAAA,IAKK,WAJWwF,EAAQO,OAASP,EAAQO,MAAMC,OAAS,IAAH,WAAnD/F,EAAAA,EAAAA,IAES,UArDzB4E,IAAA,EAmD0EhD,QAAKN,GAAE0E,EAAAC,iBAAiBV,IAAU,OAE5F,EArDhBW,MAAA,WAsDgBlG,EAAAA,EAAAA,IAAuB,OAtDvCmG,EAsD6B,WAEfpG,EAAAA,EAAAA,IAGK,YAFHA,EAAAA,EAAAA,IAA+C,UAAtC6B,QAAKN,GAAEF,EAAAgF,UAAUb,IAAU,KAAE,EAzDtDc,KA0DgBtG,EAAAA,EAAAA,IAA4D,UAAnD6B,QAAKN,GAAEF,EAAAkF,oBAAoBf,EAAQC,KAAK,KAAE,EA1DnEe,W,WAgEQxG,EAAAA,EAAAA,IAAqE,UAA5D6B,QAAKX,EAAA,KAAAA,EAAA,OAAAE,IAAEC,EAAAoF,eAAApF,EAAAoF,iBAAArF,IAAeX,MAAM,kBAAiB,UAC3CY,EAAAqF,iBAAc,WAAzBzG,EAAAA,EAAAA,IAWM,MA5Ed0G,GAAA,CAkEUC,IACA5G,EAAAA,EAAAA,IAOO,QAPAiB,SAAMC,EAAA,MAAAA,EAAA,KAnEvBC,EAAAA,EAAAA,KAAA,IAAAC,IAmEiCC,EAAAwF,mBAAAxF,EAAAwF,qBAAAzF,IAAiB,e,EAnElD0F,EAAAA,EAAAA,IAmEoD,UACpC,SAAA9G,EAAAA,EAAAA,IAAkE,SApElF,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GAoEgCF,EAAAqF,eAAehB,KAAInE,GAAEV,KAAK,OAAOY,YAAY,M,iBAA7CJ,EAAAqF,eAAehB,QAAmCqB,IApElFD,EAAAA,EAAAA,IAoEsF,UACtE,SAAA9G,EAAAA,EAAAA,IAAmE,SArEnF,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GAqEgCF,EAAAqF,eAAef,IAAGpE,GAAEV,KAAK,SAASY,YAAY,M,iBAA9CJ,EAAAqF,eAAef,OAAoCqB,IArEnFF,EAAAA,EAAAA,IAqEuF,UACvE,SAAA9G,EAAAA,EAAAA,IAAoE,SAtEpF,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GAsEgCF,EAAAqF,eAAed,OAAMrE,GAAEV,KAAK,OAAOY,YAAY,M,iBAA/CJ,EAAAqF,eAAed,UAAqCqB,IAtEpFH,EAAAA,EAAAA,IAsEwF,UACxE,SAAA9G,EAAAA,EAAAA,IAAqE,SAvErF,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GAuEgCF,EAAAqF,eAAeQ,QAAO3F,GAAEV,KAAK,OAAOY,YAAY,M,iBAAhDJ,EAAAqF,eAAeQ,WAAsCC,IAvErFL,EAAAA,EAAAA,IAuEyF,UACzE,SAAA9G,EAAAA,EAAAA,IAAyF,SAxEzG,sBAAAkB,EAAA,KAAAA,EAAA,GAAAK,GAwEgCF,EAAAqF,eAAeb,YAAWtE,GAAEV,KAAK,OAAOY,YAAY,MAAM2F,UAAU,M,iBAApE/F,EAAAqF,eAAeb,eAA0DwB,GAC7FC,IAAmC,KAErCtH,EAAAA,EAAAA,IAAuC,UAA9B6B,QAAKX,EAAA,MAAAA,EAAA,QAAAE,IAAEC,EAAAkG,YAAAlG,EAAAkG,cAAAnG,KAAY,UA3EtCoG,EAAAA,EAAAA,IAAA,UA8EsC,eAAhBxC,EAAAC,cAAW,WAA3BhF,EAAAA,EAAAA,IAYM,MA1FZwH,GAAA,CAgFQC,IACA1H,EAAAA,EAAAA,IAQO,QARAiB,SAAMC,EAAA,MAAAA,EAAA,KAjFrBC,EAAAA,EAAAA,KAAA,IAAAC,IAiF+BC,EAAAsG,eAAAtG,EAAAsG,iBAAAvG,IAAa,e,EAjF5C0F,EAAAA,EAAAA,IAiF8C,UAChC,SAAA9G,EAAAA,EAAAA,IAA4D,SAlF1E,sBAAAkB,EAAA,MAAAA,EAAA,IAAAK,GAkF8BF,EAAAuG,WAAWnC,GAAElE,GAAEV,KAAK,OAAOY,YAAY,M,iBAAvCJ,EAAAuG,WAAWnC,MAAiCoC,IAlF1Ef,EAAAA,EAAAA,IAkF8E,UAChE,SAAA9G,EAAAA,EAAAA,IAA8D,SAnF5E,sBAAAkB,EAAA,MAAAA,EAAA,IAAAK,GAmF8BF,EAAAuG,WAAWlC,KAAInE,GAAEV,KAAK,OAAOY,YAAY,M,iBAAzCJ,EAAAuG,WAAWlC,QAAmCoC,IAnF5EhB,EAAAA,EAAAA,IAmFgF,UAClE,SAAA9G,EAAAA,EAAAA,IAA+D,SApF7E,sBAAAkB,EAAA,MAAAA,EAAA,IAAAK,GAoF8BF,EAAAuG,WAAWjC,IAAGpE,GAAEV,KAAK,SAASY,YAAY,M,iBAA1CJ,EAAAuG,WAAWjC,OAAoCoC,IApF7EjB,EAAAA,EAAAA,IAoFiF,UACnE,SAAA9G,EAAAA,EAAAA,IAAgE,SArF9E,sBAAAkB,EAAA,MAAAA,EAAA,IAAAK,GAqF8BF,EAAAuG,WAAWhC,OAAMrE,GAAEV,KAAK,OAAOY,YAAY,M,iBAA3CJ,EAAAuG,WAAWhC,UAAqCoC,IArF9ElB,EAAAA,EAAAA,IAqFkF,UACpE,SAAA9G,EAAAA,EAAAA,IAAiE,SAtF/E,sBAAAkB,EAAA,MAAAA,EAAA,IAAAK,GAsF8BF,EAAAuG,WAAWV,QAAO3F,GAAEV,KAAK,OAAOY,YAAY,M,iBAA5CJ,EAAAuG,WAAWV,WAAsCe,IAtF/EnB,EAAAA,EAAAA,IAsFmF,UACrE,SAAA9G,EAAAA,EAAAA,IAAqF,SAvFnG,sBAAAkB,EAAA,MAAAA,EAAA,IAAAK,GAuF8BF,EAAAuG,WAAW/B,YAAWtE,GAAEV,KAAK,OAAOY,YAAY,MAAM2F,UAAU,M,iBAAhE/F,EAAAuG,WAAW/B,eAA0DqC,GACzFC,IAAmC,OAGP,gBAAhBnD,EAAAC,cAAW,WAA3BhF,EAAAA,EAAAA,IA4BM,MAvHZmI,GAAA,CA6FQC,IACArI,EAAAA,EAAAA,IAeM,MAfNsI,GAeM,CAbQtD,EAAAuD,WAGoB,WAEhCtI,EAAAA,EAAAA,IAOM,MA5GhBuI,GAAA,EAsGYxI,EAAAA,EAAAA,IAA6B,SAA1B,YAAQkF,EAAAA,EAAAA,IAAGF,EAAAyD,UAAQ,IACtBzI,EAAAA,EAAAA,IAAwC,UAA/B6B,QAAKX,EAAA,MAAAA,EAAA,QAAAE,IAAE6E,EAAAyC,WAAAzC,EAAAyC,aAAAtH,KAAW,QAC3BuH,IACA3I,EAAAA,EAAAA,IAAkE,SAA3Da,KAAK,OAAQ+H,SAAM1H,EAAA,MAAAA,EAAA,QAAAE,IAAE6E,EAAA4C,oBAAA5C,EAAA4C,sBAAAzH,IAAoB0C,IAAI,a,WACpD9D,EAAAA,EAAAA,IAAgE,UAAvD6B,QAAKX,EAAA,MAAAA,EAAA,QAAAE,IAAE6E,EAAA6C,UAAA7C,EAAA6C,YAAA1H,IAAWiD,SAAUW,EAAA+D,WAAW,UAAO,EA1GnEC,KA2GYhJ,EAAAA,EAAAA,IAAuC,SAApC,YAAQkF,EAAAA,EAAAA,IAAGF,EAAAiE,oBAAkB,QAXd,WAApBhJ,EAAAA,EAAAA,IAIM,MApGhBiJ,GAAA,WAiGYlJ,EAAAA,EAAAA,IAAiE,SAjG7E,sBAAAkB,EAAA,MAAAA,EAAA,IAAAK,GAiG4ByD,EAAAyD,SAAQlH,GAAEE,YAAY,WAAW2F,UAAU,K,iBAA3CpC,EAAAyD,aAChBzI,EAAAA,EAAAA,IAAyC,UAAhC6B,QAAKX,EAAA,MAAAA,EAAA,QAAAE,IAAE6E,EAAAkD,YAAAlD,EAAAkD,cAAA/H,KAAY,SAC5BpB,EAAAA,EAAAA,IAAuC,UAA9B6B,QAAKX,EAAA,MAAAA,EAAA,QAAAE,IAAE6E,EAAAmD,UAAAnD,EAAAmD,YAAAhI,KAAU,cAY9BpB,EAAAA,EAAAA,IAOM,MAPNqJ,GAOM,CALOrE,EAAAuD,WAAQ,WAAnBtI,EAAAA,EAAAA,IAIM,MArHhBqJ,GAAA,CAkHYC,IACAvJ,EAAAA,EAAAA,IAA0C,UAAjC6B,QAAKX,EAAA,MAAAA,EAAA,QAAAE,IAAE6E,EAAAuD,WAAAvD,EAAAuD,aAAApI,KAAW,WAC3BpB,EAAAA,EAAAA,IAAwC,UAA/B6B,QAAKX,EAAA,MAAAA,EAAA,QAAAE,IAAE6E,EAAAwD,SAAAxD,EAAAwD,WAAArI,KAAS,cApHrCoG,EAAAA,EAAAA,IAAA,aAAAA,EAAAA,EAAAA,IAAA,WA2HaxC,EAAA0E,iBAAc,WAAzBzJ,EAAAA,EAAAA,IASM,MATN0J,GASM,EARJ3J,EAAAA,EAAAA,IAOM,MAPN4J,GAOM,EANJ5J,EAAAA,EAAAA,IAAsD,QAAhDS,MAAM,QAASoB,QAAKX,EAAA,MAAAA,EAAA,QAAAE,IAAE6E,EAAA4D,YAAA5D,EAAA4D,cAAAzI,KAAY,MACxCpB,EAAAA,EAAAA,IAAmC,OAA7BU,IAAKsE,EAAA8E,YAAalJ,IAAI,Q,OA9HlCmJ,KA+HM/J,EAAAA,EAAAA,IAGM,MAHNgK,GAGM,EAFJhK,EAAAA,EAAAA,IAA0C,UAAjC6B,QAAKX,EAAA,MAAAA,EAAA,QAAAE,IAAE6E,EAAAgE,cAAAhE,EAAAgE,gBAAA7I,KAAc,QAC9BpB,EAAAA,EAAAA,IAAsC,UAA7B6B,QAAKX,EAAA,MAAAA,EAAA,QAAAE,IAAE6E,EAAAiE,UAAAjE,EAAAiE,YAAA9I,KAAU,eAjIlCoG,EAAAA,EAAAA,IAAA,OAyIgExC,EAAAG,gBAAa,WAD3EgF,EAAAA,EAAAA,IAG+CC,EAAA,CA3IjDvF,IAAA,EAwIwBf,IAAI,uBAAuBuG,IAAI,+BAA+BC,MAAM,eACxFC,eAAe,oBAAqB9B,SAASzD,EAAAyD,SAA+BtD,cAAcH,EAAAG,cACzFqF,uBAAwBvE,EAAAwE,2BAA6BC,oBAAqBzE,EAAA0E,qBAC1EC,kBAAmB3E,EAAA4E,uB,0GA3IxBrD,EAAAA,EAAAA,IAAA,OA6IaxC,EAAArB,eAAY,WAAvB1D,EAAAA,EAAAA,IAEM,MAFN6K,GAA+C,QAC1C5F,EAAAA,EAAAA,IAAGF,EAAArB,cAAY,KA9ItB6D,EAAAA,EAAAA,IAAA,W,CCGA,MAAMuD,GAAU/I,EAAAA,EAAMC,OAAO,CAE3BC,QAAS,yBACTC,QAAS,CAET,IAIF4I,GAAQ3I,aAAaC,QAAQC,KAAKC,IAChC,MAAMC,EAAQC,eAAeC,QAAQ,SAKrC,OAJAC,QAAQC,IAAI,mBAAmBJ,GAC3BA,IACFD,EAAOJ,QAAQ,iBAAmBK,GAE7BD,CAAM,IACZM,GACMC,QAAQC,OAAOF,KAGxB,UCpBA,MAAMmI,GAAaA,CAACC,EAAazJ,IAExBO,EAAIqB,KAAM,sBAAqB5B,IAAYyJ,GAG9CC,GAAgBA,CAACD,EAAazJ,KAElCmB,QAAQC,IAAI,kCAAmCpB,GACxCO,EAAIoJ,IAAK,sBAAqB3J,IAAYyJ,IAO7CG,GAAyB5J,GACtBO,EAAIsJ,IAAK,uBAAsB7J,KAGlC8J,GAAgBA,CAACC,EAAW/J,IACzBO,EAAIyJ,OAAQ,aAAYD,cAAsB/J,K,oGCtBnDvB,EAAAA,EAAAA,IAMM,aAJFG,EAAAA,EAAAA,IAEiDqL,EAAA,CAFnC3H,IAAI,wBAAyB4H,cAAczF,EAAA0F,YACpDnB,uBAAwBvE,EAAAwE,2BAA6BC,oBAAqBzE,EAAA2F,wBAC1EhB,kBAAmB3E,EAAA4E,uB,8FACxBzK,EAAAA,EAAAA,IAAkEyL,EAAA,CAAvD/H,IAAI,qBAAsB4H,cAAczF,EAAA0F,a,uHCLvD1L,EAAAA,EAAAA,IAEM,M,qDAIV,IACIyF,KAAM,eAENpC,IAAAA,GACI,MAAO,CAEHwI,YAAa,KACbC,YAAa,KACbC,eAAgB,GAChBC,eAAgB,IAAIC,kBAAkB,CAClCC,WAAY,CAAC,CAAEC,KAAM,mCAEzBC,mBAAoB,GAE5B,EACAC,QAAS,CAGLC,iBAAAA,CAAkBC,GACdC,KAAKV,YAAcS,EAAME,QAEzBD,KAAKE,wBACT,EAEAA,sBAAAA,GAEIF,KAAKV,YAAYa,UAAYJ,IAEzB,GAAIA,EAAMlJ,gBAAgBuJ,YAEtBJ,KAAKT,eAAe7H,KAAKqI,EAAMlJ,MAC/BX,QAAQC,IAAI,8BAEZ,IAEI,MAAMc,EAAUoJ,KAAKC,MAAMP,EAAMlJ,MACjC,GAAqB,mBAAjBI,EAAQ7C,KAER8B,QAAQC,IAAI,cACZ6J,KAAKO,MAAM,0BACR,GAAqB,yBAAjBtJ,EAAQ7C,KAEf4L,KAAKV,YAAYkB,KAAKH,KAAKI,UAAU,CAAErM,KAAM,oBAC7C8B,QAAQC,IAAI,6BACT,GAAuB,UAAnBc,EAAQyJ,OAEfV,KAAKT,eAAiB,GACtBS,KAAKW,iBAAmB1J,EACxBf,QAAQC,IAAI,SAAUc,EAAQ2J,eAC3B,GAAuB,QAAnB3J,EAAQyJ,OAAkB,CAEjC,MAAMG,EAAe,IAAIC,KAAKd,KAAKT,eAAgB,CAAEnL,KAAM4L,KAAKW,iBAAiBI,WAC3EnD,EAAMoD,IAAIC,gBAAgBJ,GAChC3K,QAAQC,IAAK,gBAAeyH,KAE5B,MAAMsD,EAAiBC,QAAQ,oCAE/B,GADAjL,QAAQC,IAAI,oBAAqB+K,GAC7BA,EAAgB,CAEhB,MAAME,EAAeC,SAASC,cAAc,KAC5CD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAaK,MAAQ,gBACrBL,EAAaM,KAAO9D,EACpBwD,EAAaO,SAAW3B,KAAKW,iBAAiBC,SAC9CQ,EAAaQ,QACbC,OAAOb,IAAIc,gBAAgBlE,GAC3B1H,QAAQC,IAAK,cAAa6J,KAAKW,iBAAiBC,WACpD,MAEIZ,KAAKO,MAAM,sBAAuB,CAAEwB,KAAMlB,IAK9Cb,KAAKT,eAAiB,GACtBS,KAAKW,iBAAmB,IAE5B,CACJ,CAAE,MAAOvK,GACLF,QAAQE,MAAM,uBAAwBA,EAC1C,CACJ,EAIJ4J,KAAKV,YAAY0C,OAAS,KACtB9L,QAAQC,IAAI,sBACZ6J,KAAKxD,mBAAqB,eAC1BwD,KAAKiC,0BAA0B,EAGnCjC,KAAKV,YAAY4C,QAAU,KACvBhM,QAAQC,IAAI,sBACZ6J,KAAKxD,mBAAqB,OAAO,EAGrCwD,KAAKV,YAAY6C,QAAU,SAAU/L,GACjCF,QAAQE,MAAM,sBAAuBA,EACzC,EAEA4J,KAAKV,YAAY4C,QAAU,WACvBhM,QAAQC,IAAI,0BAChB,CACJ,EAGAiM,sBAAAA,GACI,IAAKpC,KAAKX,YAEN,YADAnJ,QAAQC,IAAI,kCAKhB6J,KAAKR,eAAe6C,eAAiBtC,IAC7BA,EAAMuC,WAENtC,KAAKO,MAAM,eAAgB,CACvBnM,KAAM,YACNkO,UAAWvC,EAAMuC,WAEzB,EAIJtC,KAAKR,eAAe+C,2BAA6B,KAC7CrM,QAAQC,IAAI,+BAAgC6J,KAAKR,eAAegD,mBAAmB,EAIvF,MAAMlD,EAAcU,KAAKR,eAAeiD,kBAAkB,uBAC1DzC,KAAKV,YAAcA,EAGnBA,EAAYa,UAAYJ,IAEpB,GAAIA,EAAMlJ,gBAAgBuJ,YAEtBJ,KAAKT,eAAe7H,KAAKqI,EAAMlJ,MAC/BX,QAAQC,IAAI,8BAEZ,IAEI,MAAMc,EAAUoJ,KAAKC,MAAMP,EAAMlJ,MACjC,GAAqB,mBAAjBI,EAAQ7C,KAER8B,QAAQC,IAAI,cACZ6J,KAAKO,MAAM,0BACR,GAAqB,yBAAjBtJ,EAAQ7C,KAEf4L,KAAKV,YAAYkB,KAAKH,KAAKI,UAAU,CAAErM,KAAM,oBAC7C8B,QAAQC,IAAI,6BACT,GAAuB,UAAnBc,EAAQyJ,OAEfV,KAAKT,eAAiB,GACtBS,KAAKW,iBAAmB1J,EACxBf,QAAQC,IAAI,SAAUc,EAAQ2J,eAC3B,GAAuB,QAAnB3J,EAAQyJ,OAAkB,CAEjC,MAAMG,EAAe,IAAIC,KAAKd,KAAKT,eAAgB,CAAEnL,KAAM4L,KAAKW,iBAAiBI,WAC3EnD,EAAMoD,IAAIC,gBAAgBJ,GAChC3K,QAAQC,IAAK,gBAAeyH,KAG5B,MAAMsD,EAAiBC,QAAQ,oCAC/B,GAAID,EAAgB,CAEhB,MAAME,EAAeC,SAASC,cAAc,KAC5CD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAaK,MAAQ,gBACrBL,EAAaM,KAAO9D,EACpBwD,EAAaO,SAAW3B,KAAKW,iBAAiBC,SAC9CQ,EAAaQ,QACbC,OAAOb,IAAIc,gBAAgBlE,GAC3B1H,QAAQC,IAAK,cAAa6J,KAAKW,iBAAiBC,WACpD,MAEIZ,KAAKO,MAAM,sBAAuB,CAAEwB,KAAMlB,IAI9Cb,KAAKT,eAAiB,GACtBS,KAAKW,iBAAmB,IAC5B,CACJ,CAAE,MAAOvK,GACLF,QAAQE,MAAM,uBAAwBA,EAC1C,CACJ,EAIJkJ,EAAY0C,OAAS,KACjB9L,QAAQC,IAAI,sBACZ6J,KAAKxD,mBAAqB,eAC1BwD,KAAKiC,0BAA0B,EAGnC3C,EAAY4C,QAAU,KAClBhM,QAAQC,IAAI,sBACZ6J,KAAKxD,mBAAqB,OAAO,EAGrC8C,EAAY6C,QAAU,SAAU/L,GAC5BF,QAAQE,MAAM,sBAAuBA,EACzC,EAEAkJ,EAAY4C,QAAU,WAClBhM,QAAQC,IAAI,0BAChB,EAGA6J,KAAKR,eAAekD,cAAcC,MAAKC,GAC5B5C,KAAKR,eAAeqD,oBAAoBD,KAChDD,MAAK,KACJ3C,KAAKO,MAAM,eAAgB,CACvBnM,KAAM,QACNwO,MAAO5C,KAAKR,eAAesD,kBAC7B,IACHC,OAAM3M,GAASF,QAAQE,MAAM,gBAAiBA,IAErD,EAEA4M,uBAAAA,CAAwB5O,EAAM6O,GAM1B,OAAQ7O,GACJ,IAAK,QAED4L,KAAKkD,YAAYD,GACjB,MACJ,IAAK,SACDjD,KAAKmD,aAAaF,GAClB,MACJ,IAAK,YACDjD,KAAKoD,sBAAsBH,GAC3B,MACJ,QACI/M,QAAQE,MAAM,wCAAyChC,GAEnE,EAEA8O,WAAAA,CAAYG,GACR,IAAKrD,KAAKR,eAEN,YADAtJ,QAAQE,MAAM,sCAIlB,MAAMwM,EAAQ,IAAIU,sBAAsBD,GACxCrD,KAAKR,eAAe+D,qBAAqBX,GACpCD,MAAK,IAAM3C,KAAKR,eAAegE,iBAC/Bb,MAAKc,GAAUzD,KAAKR,eAAeqD,oBAAoBY,KACvDd,MAAK,KAEF3C,KAAKO,MAAM,eAAgB,CACvBnM,KAAM,SACNqP,OAAQzD,KAAKR,eAAesD,iBAC5BzD,YAAaW,KAAKX,aACpB,IAEL0D,OAAM3M,GAASF,QAAQE,MAAM,oCAAqCA,IAC3E,EAEA+M,YAAAA,CAAaO,GACT,MAAMD,EAAS,IAAIH,sBAAsBI,GACE,qBAAvC1D,KAAKR,eAAemE,eACpB3D,KAAKR,eAAe+D,qBAAqBE,GACpCd,MAAK,KAEF3C,KAAK4D,yBAAyB,IAEjCb,OAAM3M,GAASF,QAAQE,MAAM,oCAAqCA,KAEvEF,QAAQE,MAAO,wDAAuD4J,KAAKR,eAAemE,iBAElG,EAEAP,qBAAAA,CAAsBS,GAClB,MAAMvB,EAAY,IAAIwB,gBAAgB,CAClCC,cAAeF,EAAcE,cAC7BzB,UAAWuB,EAAcvB,YAGzBtC,KAAKR,eAAewE,kBACpBhE,KAAKR,eAAeyE,gBAAgB3B,GAC/BS,OAAM3M,GAASF,QAAQE,MAAM,uCAAwCA,KAG1E4J,KAAKJ,mBAAmBlI,KAAK4K,EAErC,EAGAsB,uBAAAA,GACI5D,KAAKJ,mBAAmBsE,SAAQ5B,GAC5BtC,KAAKR,eAAeyE,gBAAgB3B,GAC/BS,OAAM3M,GAASF,QAAQE,MAAM,uCAAwCA,OAG9E4J,KAAKJ,mBAAqB,EAC9B,EAEAqC,wBAAAA,GACQjC,KAAKV,aAA+C,SAAhCU,KAAKV,YAAY6E,aACrCnE,KAAKV,YAAYkB,KAAKH,KAAKI,UAAU,CAAErM,KAAM,0BAC7C8B,QAAQC,IAAI,wBAEpB,EAEAiG,kBAAAA,CAAmB2D,GACf,MAAMgC,EAAOhC,EAAMqE,OAAO9K,MAAM,GAC5ByI,GACA/B,KAAK3D,SAAS0F,EAEtB,EAEA1F,QAAAA,CAAS0F,GACL,GAAoC,SAAhC/B,KAAKV,YAAY6E,WAEjB,YADAnE,KAAK9I,aAAe,mBAGxBhB,QAAQC,IAAI,UACZ,MAAMkO,EAAY,MAClB,IAAIC,EAAS,EAGb,MAAMC,EAAW,CACb3D,SAAUmB,EAAK9I,KACfuL,SAAUzC,EAAK0C,KACf1D,SAAUgB,EAAK3N,KACfsM,OAAQ,SAEZV,KAAKV,YAAYkB,KAAKH,KAAKI,UAAU8D,IAGrC,MAAMG,EAAYC,IACd,MAAMC,EAAS,IAAIC,WACbC,EAAQ/C,EAAK+C,MAAMR,EAAQK,EAAIN,GACrCO,EAAOG,OAAS,KACZ/E,KAAKV,YAAYkB,KAAKoE,EAAOpN,QACzBuK,EAAK0C,KAAOH,GACZA,GAAUD,EACVK,EAAUJ,KAGVtE,KAAKV,YAAYkB,KAAKH,KAAKI,UAAU,CAAEC,OAAQ,SAE/CV,KAAKO,MAAM,0BACf,EAEJqE,EAAOzC,QAAW6C,GAAM9O,QAAQE,MAAM,sBAAuB4O,GAC7DJ,EAAOK,kBAAkBH,EAAM,EAGnCJ,EAAU,EACd,EAEAQ,eAAAA,GAEQlF,KAAKR,iBACLQ,KAAKR,eAAe2F,QACpBnF,KAAKR,eAAiB,KACtBtJ,QAAQC,IAAI,6BAEpB,GAGJiP,OAAAA,GAEIpF,KAAKR,eAAe6F,cAAgBrF,KAAKF,iBAC7C,EACAwF,aAAAA,GAEItF,KAAKkF,iBACT,GCzXJ,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,yECLQ3R,EAAAA,EAAAA,IAAyC,SAAlCyF,GAAG,cAAcuM,SAAA,I,uBACxBhS,EAAAA,EAAAA,IAAkE,SAA3DyF,GAAG,aAAauM,SAAA,GAASC,MAAA,GAAMxR,MAAM,e,eAD5CN,GACAW,I,gCAF+BkE,EAAAkN,aAAU,WAA7CjS,EAAAA,EAAAA,IAGM,OAJV4E,IAAA,EACSpE,MAAM,kBAAqC0R,YAASjR,EAAA,KAAAA,EAAA,OAAAE,IAAE6E,EAAAmM,WAAAnM,EAAAmM,aAAAhR,KAD/DL,GAAA,MAAAyG,EAAAA,EAAAA,IAAA,M,CAQA,QACI9B,KAAM,YAENpC,IAAAA,GACI,MAAO,CAGH+O,oBAAqB,IAAInG,kBAAkB,CACvCC,WAAY,CAAC,CAAEC,KAAM,mCAEzBkG,YAAa,KACbC,aAAc,IAAIC,YAClBC,wBAAyB,GACzBC,aAAa,EACbR,YAAY,EAGZS,UAAU,EAEVC,OAAQ,EACRC,OAAQ,EAEhB,EACAvG,QAAS,CAILwG,aAAAA,GAEI,OADArG,KAAKyF,YAAa,EACXa,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IAC5D/D,MAAKgE,IACF3G,KAAK6F,YAAcc,EAEnB,MAAMC,EAAavF,SAASwF,cAAc,eACtCD,IAAYA,EAAWE,UAAYH,GAGvCA,EAAOI,YAAY7C,SAAQ8C,IACvBhH,KAAK4F,oBAAoBqB,SAASD,EAAOL,EAAO,IAGpD3G,KAAKkH,gBAAgB,IAExBnE,OAAM3M,IACHF,QAAQE,MAAM,iCAAkCA,EAAM,GAElE,EAGA8Q,cAAAA,GACIlH,KAAK4F,oBAAoBuB,QAAUpH,IAC/BA,EAAMqH,QAAQ,GAAGL,YAAY7C,SAAQ8C,IACjChH,KAAK8F,aAAamB,SAASD,EAAM,GACnC,EAGN,MAAMK,EAAchG,SAASwF,cAAc,gBACvCQ,IAAaA,EAAYP,UAAY9G,KAAK8F,cAG9C9F,KAAK4F,oBAAoBvD,eAAiBtC,IAClCA,EAAMuC,WACNtC,KAAKO,MAAM,eAAgB,CACvBnM,KAAM,kBACNkO,UAAWvC,EAAMuC,WAEzB,EAIAtC,KAAKiG,aACLjG,KAAK4F,oBAAoBlD,cACpBC,MAAKC,GAAS5C,KAAK4F,oBAAoB/C,oBAAoBD,KAC3DD,MAAK,KACF3C,KAAKO,MAAM,eAAgB,CACvBnM,KAAM,cACNwO,MAAO5C,KAAK4F,oBAAoB9C,kBAClC,IAGLC,OAAM3M,GAASF,QAAQE,MAAM,8BAA+BA,IAEzE,EAGAkR,wBAAAA,CAAyBlT,EAAM6O,GAC3B,OAAQ7O,GACJ,IAAK,cAED4L,KAAKqG,gBAAgB1D,MAAK,KACtB3C,KAAKuH,iBAAiBtE,EAAW,IAErCjD,KAAKyF,YAAa,EAClB,MACJ,IAAK,eACDzF,KAAKwH,kBAAkBvE,GACvB,MACJ,IAAK,kBACDjD,KAAKyH,2BAA2BxE,GAChC,MAGZ,EAIAsE,gBAAAA,CAAiBlE,GAEb,MAAMT,EAAQ,IAAIU,sBAAsBD,GACxCrD,KAAK4F,oBAAoBrC,qBAAqBX,GACzCD,MAAK,IAAM3C,KAAK4F,oBAAoBpC,iBACpCb,MAAKc,GAAUzD,KAAK4F,oBAAoB/C,oBAAoBY,KAC5Dd,MAAK,KAEF3C,KAAKO,MAAM,eAAgB,CACvBnM,KAAM,eACNqP,OAAQzD,KAAK4F,oBAAoB9C,kBACnC,IAGLC,OAAM3M,GAASF,QAAQE,MAAM,iCAAkCA,IACxE,EAGAoR,iBAAAA,CAAkB9D,GACd,MAAMD,EAAS,IAAIH,sBAAsBI,GACzC1D,KAAK4F,oBAAoBrC,qBAAqBE,GACzCd,MAAK,KAEF3C,KAAK0H,8BAA8B,IAEtC3E,OAAM3M,GAASF,QAAQE,MAAM,kCAAmCA,IACzE,EAGAqR,0BAAAA,CAA2B5D,GACvB,MAAMvB,EAAY,IAAIwB,gBAAgB,CAClCC,cAAeF,EAAcE,cAC7BzB,UAAWuB,EAAcvB,YAEzBtC,KAAK4F,oBAAoB5B,mBAAqBhE,KAAK4F,oBAAoB5B,kBAAkB5P,KACzF4L,KAAK4F,oBAAoB3B,gBAAgB3B,GACpCS,OAAM3M,GAASF,QAAQE,MAAM,6CAA8CA,KAGhF4J,KAAKgG,wBAAwBtO,KAAK4K,EAE1C,EAGAoF,4BAAAA,GACI1H,KAAKgG,wBAAwB9B,SAAQ5B,GACjCtC,KAAK4F,oBAAoB3B,gBAAgB3B,GACpCS,OAAM3M,GAASF,QAAQE,MAAM,6CAA8CA,OAGpF4J,KAAKgG,wBAA0B,EACnC,EAGA2B,gBAAAA,GAEI,GAAI3H,KAAK6F,YAAa,CAClB7F,KAAK6F,YAAYkB,YAAY7C,SAAQ8C,IACjCA,EAAMY,MAAM,IAGhB,MAAMhB,EAAavF,SAASwF,cAAc,eACtCD,IAAYA,EAAWE,UAAY,KAC3C,CAGA,GAAI9G,KAAK8F,aAAc,CACnB9F,KAAK8F,aAAaiB,YAAY7C,SAAQ8C,IAClCA,EAAMY,MAAM,IAGhB,MAAMP,EAAchG,SAASwF,cAAc,gBACvCQ,IAAaA,EAAYP,UAAY,KAC7C,CAGI9G,KAAK4F,sBACL5F,KAAK4F,oBAAoBT,QACzBnF,KAAK4F,oBAAsB,MAI/B5F,KAAKyF,YAAa,CACtB,EAEAE,SAAAA,CAAUX,GACNhF,KAAKkG,UAAW,EAChBlG,KAAKmG,OAASnB,EAAE6C,QAChB7H,KAAKoG,OAASpB,EAAE8C,QAGhB9C,EAAE+C,iBAEF1G,SAAS2G,iBAAiB,YAAahI,KAAKiI,UAC5C5G,SAAS2G,iBAAiB,UAAWhI,KAAKkI,QAC9C,EACAD,QAAAA,CAASjD,GACL,IAAKhF,KAAKkG,SAAU,OAEpB,MAAMiC,EAAKnD,EAAE6C,QAAU7H,KAAKmG,OACtBiC,EAAKpD,EAAE8C,QAAU9H,KAAKoG,OAC5BpG,KAAKmG,OAASnB,EAAE6C,QAChB7H,KAAKoG,OAASpB,EAAE8C,QAGhB,MAAMO,EAAmBxG,OAAOyG,iBAAiBtI,KAAKuI,KAAKC,UAC3D,IAAIC,EAA8B,SAArBJ,EACP,2BACAA,EACFK,EAAeD,EAAOE,MAAM,oBAAoB,GAAGC,MAAM,MACzDC,EAAaC,SAASJ,EAAa,IAAMP,EACzCY,EAAaD,SAASJ,EAAa,IAAMN,EAE7CpI,KAAKuI,IAAI9G,MAAM+G,UAAa,aAAYK,QAAiBE,MAC7D,EACAb,OAAAA,GACIlI,KAAKkG,UAAW,EAChB7E,SAAS2H,oBAAoB,YAAahJ,KAAKiI,UAC/C5G,SAAS2H,oBAAoB,UAAWhJ,KAAKkI,QACjD,GAEJ9C,OAAAA,GACI,EAEJE,aAAAA,GAEItF,KAAK2H,kBACT,GC1OJ,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UJQA,IACI1O,KAAM,uBACNgQ,WAAY,CACRC,aAAY,GACZC,UAASA,IAEbC,MAAO,CACHxL,IAAKyL,OACLxL,MAAOwL,OACPrN,SAAUqN,OACVvL,eAAgBuL,OAChB3Q,cAAe2Q,QAEnBxS,IAAAA,GACI,MAAO,CACHyS,YAAa,KACbpS,aAAc,GACdmI,YAAa,KACbkK,aAAa,EAErB,EACA1J,QAAS,CACL2J,cAAAA,GACIxJ,KAAKyJ,SACT,EAEAA,OAAAA,GACI,IAAI1T,EAAQC,eAAeC,QAAQ,SACnCC,QAAQC,IAAI,wBAAyBJ,GAEjCA,GAASA,EAAMe,WAAW,aAC1Bf,EAAQA,EAAM2T,UAAU,GACxBxT,QAAQC,IAAI,YAAaJ,IAG7B,MAAM4T,EAAgB,GAAE3J,KAAKpC,aAAa7H,IAC1CG,QAAQC,IAAI,kBAAmBwT,GAE/B,MAAMC,EAAS,IAAIC,KAAJ,CAAWF,GAC1B3J,KAAKsJ,YAAcQ,KAAAA,KAAWF,GAC9B5J,KAAKsJ,YAAYG,QAAQ,CAAC,GAAGM,IACzB7T,QAAQC,IAAI,cAAgB4T,GAE5B7T,QAAQC,IAAI,UAAW6J,KAAKtH,eAC5BxC,QAAQC,IAAI,UAAW6J,KAAKhE,UAE5BgE,KAAKsJ,YAAYU,UAAU,SAAWhK,KAAKtH,cAAgB,eAAezB,IACtEf,QAAQC,IAAK,aACb,MAAMU,EAAOwJ,KAAKC,MAAMrJ,EAAQsK,MAC5B1K,EAAKwI,aAAexI,EAAKwI,cAAgBW,KAAKtH,gBAC9CxC,QAAQC,IAAK,sBAAqBU,EAAKwI,eACvCW,KAAKX,YAAcxI,EAAKwI,YACxBW,KAAKiK,MAAMC,sBAAsB7K,YAAcxI,EAAKwI,YAChDxI,EAAKwI,YAAcW,KAAKtH,eAExBsH,KAAKiK,MAAMC,sBAAsB9H,yBAEzC,IAIJpC,KAAKsJ,YAAYU,UAAW,eAAchK,KAAKhE,YAAY/E,IACvDf,QAAQC,IAAK,aACb,MAAMU,EAAOwJ,KAAKC,MAAMrJ,EAAQsK,MAC5B1K,EAAK6J,QAA0B,SAAhB7J,EAAK6J,QAAqB7J,EAAKsT,SAAWnK,KAAKX,cAC9DnJ,QAAQC,IAAK,GAAE6J,KAAKX,kCACpBW,KAAKoK,4BAA4BpK,KAAKX,aAC1C,IAIJW,KAAKsJ,YAAYU,UAAU,SAAWhK,KAAKtH,cAAgB,gBAAgBzB,IACvE+I,KAAKqK,oBAAoBhK,KAAKC,MAAMrJ,EAAQsK,MAAM,IAKtDvB,KAAKuJ,aAAc,CAAI,IAExBnT,IACCF,QAAQE,MAAM,qBAAuBA,GACrC4J,KAAK9I,aAAe,iBACpB8I,KAAKuJ,aAAc,CAAK,GAEhC,EAEAe,iBAAAA,CAAkBC,GACdC,YAAW,KACHxK,KAAKsJ,YAAYmB,UACjBF,IAEAvK,KAAKsK,kBAAkBC,EAC3B,GACD,IACP,EAEAH,2BAAAA,CAA4BD,GACxBjU,QAAQC,IAAK,+BAA8BgU,KAEvCnK,KAAKiK,MAAMC,uBACXlK,KAAKiK,MAAMC,sBAAsBhF,kBAEjClF,KAAKiK,MAAMS,oBACX1K,KAAKiK,MAAMS,mBAAmB/C,mBAGlC3H,KAAKX,YAAc,IACvB,EAEAgL,mBAAAA,CAAoBM,GAEhB,MAAM,KAAEvW,EAAI,QAAEwW,GAAYD,EAE1B,IAAI1H,EACJ,IACIA,EAAa5C,KAAKC,MAAMsK,EAC5B,CAAE,MAAOxU,GAEL,YADAF,QAAQE,MAAM,wCAAyCA,EAE3D,CAMIhC,EAAK0C,WAAW,UAChBkJ,KAAKiK,MAAMS,mBAAmBpD,yBAAyBlT,EAAM6O,GAE7DjD,KAAKiK,MAAMC,sBAAsBlH,wBAAwB5O,EAAM6O,EAEvE,EAEA/D,WAAAA,CAAYjI,GACR,GAAI+I,KAAKsJ,aAAetJ,KAAKuJ,aAAevJ,KAAKX,YAAa,CAI1D,IAAIwL,EAEAA,EADA5T,EAAQ2L,OAAS3L,EAAQwM,QAAUxM,EAAQqL,UAC9BjC,KAAKI,UAAUxJ,EAAQ2L,OAAS3L,EAAQwM,QAAUxM,EAAQqL,WAG1DjC,KAAKI,UAAUxJ,GAGhC,MAAM6T,EAAM,IACL7T,EACHoI,YAAaW,KAAKX,YAClBuL,QAASC,GAEb7K,KAAKsJ,YAAY9I,KAAKR,KAAKlC,eAAgBuC,KAAKI,UAAUqK,GAAM,CAAC,EACrE,MACI5U,QAAQE,MAAM,gDAEtB,EAEA4H,0BAAAA,GAEIgC,KAAKO,MAAM,yBACf,EAEApB,uBAAAA,CAAwB4C,GACpB7L,QAAQC,IAAI,kCAEZ6J,KAAKO,MAAM,sBAAuBwB,EACtC,EAEA3D,qBAAAA,GAEI4B,KAAKO,MAAM,oBACf,EAEAwK,cAAAA,GAEI/K,KAAKiK,MAAMS,mBAAmBzE,aAAc,EAC5CjG,KAAKiK,MAAMS,mBAAmBrE,eAClC,EAEA2E,UAAAA,GAEQhL,KAAKiK,MAAMC,uBACXlK,KAAKiK,MAAMC,sBAAsBhF,kBAEjClF,KAAKiK,MAAMS,oBACX1K,KAAKiK,MAAMS,mBAAmB/C,mBAG9B3H,KAAKsJ,aAAetJ,KAAKuJ,aACzBvJ,KAAKsJ,YAAY0B,YAAW,KACxB9U,QAAQC,IAAI,uCACZ6J,KAAKuJ,aAAc,CAAK,GAKpC,GAGJnE,OAAAA,GACI,EAEJE,aAAAA,GAEItF,KAAKgL,YACT,GKxNJ,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,URoJA,IACEC,MAAO,CACLzS,WAAAA,CAAY0S,GACK,gBAAXA,GACFlL,KAAKhG,eAET,GAGFiP,WAAY,CACVkC,qBAAoBA,IAGtBtU,IAAAA,GACE,MAAO,CACLuU,gBAAiB,+BACjBC,YAAa,eACbvN,eAAgB,oBAChBtB,mBAAoB,MACpB8O,UAAW,KACXtP,SAAU,GACVF,UAAU,EACV5E,aAAc,GACdwB,cAAe1C,eAAeC,QAAQ,YACtCqG,WAAW,EAEX9D,YAAa,cACbyE,gBAAgB,EAChBsO,iBAAkB,EAClBC,aAAc,GACdnO,YAAa,GAEjB,EACAwC,QAAS,CACP,gBAAMnD,GACJ,GAA6B,IAAzBsD,KAAKhE,SAASzC,OAAlB,CAKAyG,KAAKiK,MAAMwB,qBAAqBjC,iBAChC,IACE,MAAM9S,QAAiBpB,EAAIqB,KAAK,kBAAmB,CAAEqF,SAAUgE,KAAKhE,WAEtC,iBAA1BtF,EAASG,KAAKI,UAChB+I,KAAKlE,UAAW,EAChBkE,KAAKxD,mBAAqB,wBAE9B,CAAE,MAAOpG,GAEHA,EAAMM,UAAYN,EAAMM,SAASG,MAEnCX,QAAQE,MAAM,UAAWA,EAAMM,SAASG,KAAKT,OAC7CuB,MAAO,WAAUvB,EAAMM,SAASG,KAAKT,WAGrCF,QAAQE,MAAM,QAASA,GACvBuB,MAAM,eAEV,CArBA,MAFEA,MAAM,aAwBV,EAEA,cAAMgF,GACyB,IAAzBqD,KAAKhE,SAASzC,QAKlByG,KAAKiK,MAAMwB,qBAAqBjC,iBAEhCxJ,KAAK0L,sBANH/T,MAAM,aAOV,EAEA+T,kBAAAA,GAEE,MAAMC,EAA2BA,KAC3B3L,KAAKiK,MAAMwB,qBAAqBlC,YAElCjU,EAAIqB,KAAK,gBAAiB,CAAEqF,SAAUgE,KAAKhE,WACxC2G,MAAKjM,IACAA,EAASG,MAAQH,EAASG,KAAKI,SAAWP,EAASG,KAAKI,QAAQ2U,SAAS,YAC3E5L,KAAKlE,UAAW,EAChBkE,KAAKxD,mBAAqB9F,EAASG,KAAKI,QAC1C,IAED8L,OAAM3M,IACLF,QAAQE,MAAM,UAAWA,GACzBuB,MAAM,gBAAgB,IAG1B6S,WAAWmB,EAA0B,IACvC,EAGFA,GACF,EAEA,eAAM1P,GACJ,MAAMvF,QAAiBpB,EAAIqB,KAAK,iBAAkB,CAAEqF,SAAUgE,KAAKhE,WACrC,aAA1BtF,EAASG,KAAKI,SAChB+I,KAAKiK,MAAMwB,qBAAqBxB,MAAMS,mBAAmB/C,mBACzD3H,KAAK6L,kBAELlU,MAAM,UAAYjB,EAASG,KAAKT,MAEpC,EAEAyV,cAAAA,GACE7L,KAAKlE,UAAW,EAChBkE,KAAKhE,SAAW,GAChBgE,KAAKxD,mBAAqB,KAE5B,EAEAJ,kBAAAA,GACE4D,KAAKxD,mBAAqB,eAC5B,EAEAH,QAAAA,GACE,IAAK2D,KAAKiK,MAAMwB,qBAAqBxB,MAAMC,sBAAsB5K,aACwB,SAAvFU,KAAKiK,MAAMwB,qBAAqBxB,MAAMC,sBAAsB5K,YAAY6E,WAExE,YADAnE,KAAK9I,aAAe,wBAGtB,MAAM6K,EAAO/B,KAAKiK,MAAMqB,UAAUhS,MAAM,GACnCyI,GAIL/B,KAAKxD,mBAAqB,UAC1BwD,KAAK1D,WAAY,EACjB0D,KAAKiK,MAAMwB,qBAAqBxB,MAAMC,sBAAsB7N,SAAS0F,IALnE/B,KAAK9I,aAAe,WAMxB,EAEA6F,SAAAA,GAEEiD,KAAKiK,MAAMwB,qBAAqBV,gBAClC,EAEA/N,OAAAA,GAEEgD,KAAKiK,MAAMwB,qBAAqBxB,MAAMS,mBAAmB/C,kBAC3D,EAEA3J,0BAAAA,GAEEgC,KAAKxD,mBAAqB,SAC1BwD,KAAK1D,WAAY,CACnB,EAEA8B,qBAAAA,GAEE4B,KAAKxD,mBAAqB,WAC5B,EAEA0B,oBAAAA,CAAqB4N,GACnB5V,QAAQC,IAAI,gBACZD,QAAQC,IAAI2V,GACZ,MAAMhN,EAAYiN,OAAO,YACzB,GAAIjN,GAAagN,GAAgBA,EAAa/J,KAAM,CAElD,MAAMiK,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQJ,EAAa/J,MACrCiK,EAASE,OAAO,YAAapN,GAG7B,IAAK,IAAK1G,EAAKX,KAAUuU,EAASG,UAChCjW,QAAQC,IAAK,GAAEiC,MAAQX,KAIzB6G,GAAQ3H,KAAK,kBAAmBqV,EAAU,CACxCtW,QAAS,CACP,IAEDiN,MAAK,KACNhL,MAAM,UAAU,IACfoL,OAAM3M,IACPF,QAAQE,MAAM,SAAUA,GACxBuB,MAAM,UAAU,GAEpB,MACEA,MAAM,kBAEV,EAEA8B,gBAAAA,CAAiBV,GACfiH,KAAKwL,aAAezS,EAAQO,MAC5B0G,KAAKuL,iBAAmB,EACxBvL,KAAK3C,YAAc2C,KAAKwL,aAAajS,OAASyG,KAAKwL,aAAa,GAAK,GACrExL,KAAK/C,gBAAiB,CACxB,EACAG,UAAAA,GACE4C,KAAK/C,gBAAiB,CACxB,EACAO,YAAAA,GACMwC,KAAKwL,aAAajS,SACpByG,KAAKuL,kBAAoBvL,KAAKuL,iBAAmBvL,KAAKwL,aAAajS,OAAS,GAAKyG,KAAKwL,aAAajS,OACnGyG,KAAK3C,YAAc2C,KAAKwL,aAAaxL,KAAKuL,kBAE9C,EACA9N,QAAAA,GACMuC,KAAKwL,aAAajS,SACpByG,KAAKuL,kBAAoBvL,KAAKuL,iBAAmB,GAAKvL,KAAKwL,aAAajS,OACxEyG,KAAK3C,YAAc2C,KAAKwL,aAAaxL,KAAKuL,kBAE9C,GAGFnG,OAAAA,GACEpF,KAAKsL,UAAYtL,KAAKiK,MAAMqB,SAC9B,EAEAlU,KAAAA,GACE,MAAME,GAASC,EAAAA,EAAAA,MACTuB,GAAWzB,EAAAA,EAAAA,IAAI,IACf4C,GAAiB5C,EAAAA,EAAAA,IAAI,MAErB2C,EAAgBxD,UACpB,IAEE,MAAMzB,EAAWiB,eAAeC,QAAQ,YACxC,IAAKlB,EAEH,YADAmB,QAAQE,MAAM,kBAIhB,MAAMM,QAAiBiI,GAAsB5J,GACvCqX,EAAe1V,EAASG,KAG9BiC,EAASrB,MAAQ2U,EAGjB,IAAK,IAAIrT,KAAWqT,QACZC,EAAkBtT,EAAQC,GAGpC,CAAE,MAAO5C,GACPF,QAAQE,MAAM,YAAaA,EAC7B,IAKFkW,EAAAA,EAAAA,KAAU,KACRtS,GAAe,IAGjB,MAAMJ,EAAab,IACjBkB,EAAexC,MAAQ,IAAKsB,EAAS,EAKjCsT,EAAoB7V,UACxB,IACE,MAAME,QAAiBpB,EAAIsJ,IAAK,qBAAoBE,KAC9CxF,EAAQ5C,EAASG,KACvB,GAAIyC,EAAMC,OAAS,EAAG,CACpB,MAAMgT,EAAezT,EAASrB,MAAM+U,WAAUC,GAAKA,EAAEzT,KAAO8F,KACtC,IAAlByN,IAEFzT,EAASrB,MAAM8U,GAAcjT,MAAQA,EACrCR,EAASrB,MAAQ,IAAIqB,EAASrB,OAGlC,CACF,CAAE,MAAOrB,GACPF,QAAQE,MAAM,WAAYA,EAC5B,GAGIgE,EAAoB5D,UACxB,IACE,MAAMzB,EAAWiB,eAAeC,QAAQ,YACxC,IAAKlB,EACH,MAAM,IAAI2X,MAAM,mBAElB,GAAIzS,EAAexC,MAAM2B,aAA2D,KAA5Ca,EAAexC,MAAM2B,YAAYG,OACvE,MAAM,IAAImT,MAAM,mBAEZjO,GAAcxE,EAAexC,MAAO1C,GAC1C4C,MAAM,YACNqC,IACAC,EAAexC,MAAQ,IACzB,CAAE,MAAOrB,GACPF,QAAQE,MAAM,YAAaA,EAC7B,GAGI0E,EAAaA,KACjBb,EAAexC,MAAQ,IAAI,EAGvB0D,GAAa9D,EAAAA,EAAAA,IAAI,CAAC,GAElB6D,EAAgB1E,UACpB,IACE,MAAMzB,EAAWiB,eAAeC,QAAQ,YACxC,IAAKlB,EACH,MAAM,IAAI2X,MAAM,kBAElB,GAAIvR,EAAW1D,MAAM2B,aAAuD,KAAxC+B,EAAW1D,MAAM2B,YAAYG,OAC/D,MAAM,IAAImT,MAAM,aAGlB,MAAMC,GAAc,IAAIC,MAAOC,cACzBxT,EAAYsT,EAAY/D,MAAM,KAAK,GAEnCpK,EAAc,IACfrD,EAAW1D,MACdqV,OAAQ/X,EACRsE,UAAWA,SAGPkF,GAAWC,EAAazJ,GAC9B4C,MAAM,UACNqC,IACAmB,EAAW1D,MAAQ,CAAC,CACtB,CAAE,MAAOrB,GACPF,QAAQE,MAAM,UAAWA,EAAMa,QACjC,GAGI6C,EAAsBtD,UAC1B,IACE,MAAMzB,EAAWiB,eAAeC,QAAQ,YACxC,IAAKlB,EACH,MAAM,IAAI2X,MAAM,wBAEZ7N,GAAcC,EAAW/J,GAC/B4C,MAAM,UACNqC,GACF,CAAE,MAAO5D,GACPF,QAAQE,MAAM,UAAWA,EAAMa,QACjC,GAGI0B,EAASA,KAEb3C,eAAeS,WAAW,SAC1BT,eAAeS,WAAW,YAE1Ba,EAAOI,KAAK,IAAI,EAIlB,MAAO,CACLoB,WACAqC,aACAlB,iBACAD,gBACAqS,oBACAzS,YACAsB,gBACApB,sBACAM,oBACAU,aACAnC,SAEJ,GS7fF,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCJA,MAAMoU,GAAS,CACb,CACEC,KAAM,IACN/T,KAAM,cACNgU,UAAWC,GAEb,CACEF,KAAM,mBACN/T,KAAM,iBACNgU,UAAWE,GAEb,CACEH,KAAM,oBACN/T,KAAM,kBACNgU,UAAWG,KAIT9V,IAAS+V,EAAAA,EAAAA,IAAa,CAC1BC,SAASC,EAAAA,EAAAA,MACTR,YAGF,WCxBAS,EAAAA,EAAAA,IAAUC,GACP5X,IAAIyB,IACJoW,MAAM,O,GCLLC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,CAGAJ,EAAoBQ,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfT,EAAoBU,EAAI,SAAS9W,EAAQ+W,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIP,EAAS9U,OAAQqV,IAAK,CACrCL,EAAWF,EAASO,GAAG,GACvBJ,EAAKH,EAASO,GAAG,GACjBH,EAAWJ,EAASO,GAAG,GAE3B,IAJA,IAGIC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAAShV,OAAQuV,MACpB,EAAXL,GAAsBC,GAAgBD,IAAaM,OAAOC,KAAKpB,EAAoBU,GAAGW,OAAM,SAAS7W,GAAO,OAAOwV,EAAoBU,EAAElW,GAAKmW,EAASO,GAAK,IAChKP,EAASW,OAAOJ,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbR,EAASa,OAAON,IAAK,GACrB,IAAIO,EAAIX,SACET,IAANoB,IAAiB3X,EAAS2X,EAC/B,CACD,CACA,OAAO3X,CArBP,CAJCiX,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIP,EAAS9U,OAAQqV,EAAI,GAAKP,EAASO,EAAI,GAAG,GAAKH,EAAUG,IAAKP,EAASO,GAAKP,EAASO,EAAI,GACrGP,EAASO,GAAK,CAACL,EAAUC,EAAIC,EAwB/B,C,eC5BAb,EAAoBwB,EAAI,SAASnB,GAChC,IAAIoB,EAASpB,GAAUA,EAAOqB,WAC7B,WAAa,OAAOrB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoB2B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,C,eCNAzB,EAAoB2B,EAAI,SAASvB,EAASyB,GACzC,IAAI,IAAIrX,KAAOqX,EACX7B,EAAoBjJ,EAAE8K,EAAYrX,KAASwV,EAAoBjJ,EAAEqJ,EAAS5V,IAC5E2W,OAAOW,eAAe1B,EAAS5V,EAAK,CAAEuX,YAAY,EAAM/Q,IAAK6Q,EAAWrX,IAG3E,C,eCPAwV,EAAoBgC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO7P,MAAQ,IAAI8P,SAAS,cAAb,EAChB,CAAE,MAAO9K,GACR,GAAsB,kBAAXnD,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxB+L,EAAoBjJ,EAAI,SAASoL,EAAKC,GAAQ,OAAOjB,OAAOkB,UAAUC,eAAe/B,KAAK4B,EAAKC,EAAO,C,eCCtGpC,EAAoBuB,EAAI,SAASnB,GACX,qBAAXmC,QAA0BA,OAAOC,aAC1CrB,OAAOW,eAAe1B,EAASmC,OAAOC,YAAa,CAAE3Y,MAAO,WAE7DsX,OAAOW,eAAe1B,EAAS,aAAc,CAAEvW,OAAO,GACvD,C,eCNAmW,EAAoBnB,EAAI,G,eCKxB,IAAI4D,EAAkB,CACrB,IAAK,GAaNzC,EAAoBU,EAAEQ,EAAI,SAASwB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4B3Z,GAC/D,IAKIgX,EAAUyC,EALV/B,EAAW1X,EAAK,GAChB4Z,EAAc5Z,EAAK,GACnB6Z,EAAU7Z,EAAK,GAGI+X,EAAI,EAC3B,GAAGL,EAASoC,MAAK,SAAS3X,GAAM,OAA+B,IAAxBqX,EAAgBrX,EAAW,IAAI,CACrE,IAAI6U,KAAY4C,EACZ7C,EAAoBjJ,EAAE8L,EAAa5C,KACrCD,EAAoBQ,EAAEP,GAAY4C,EAAY5C,IAGhD,GAAG6C,EAAS,IAAIlZ,EAASkZ,EAAQ9C,EAClC,CAEA,IADG4C,GAA4BA,EAA2B3Z,GACrD+X,EAAIL,EAAShV,OAAQqV,IACzB0B,EAAU/B,EAASK,GAChBhB,EAAoBjJ,EAAE0L,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO1C,EAAoBU,EAAE9W,EAC9B,EAEIoZ,EAAqBC,KAAK,wBAA0BA,KAAK,yBAA2B,GACxFD,EAAmB1M,QAAQqM,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBlZ,KAAO6Y,EAAqBO,KAAK,KAAMF,EAAmBlZ,KAAKoZ,KAAKF,G,IC/CvF,IAAIG,EAAsBnD,EAAoBU,OAAEP,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,KAAO,IACjHmD,EAAsBnD,EAAoBU,EAAEyC,E","sources":["webpack://frontend/./src/App.vue","webpack://frontend/./src/App.vue?7ccd","webpack://frontend/./src/views/DoctorLogin.vue","webpack://frontend/./src/services/api.js","webpack://frontend/./src/services/authService.js","webpack://frontend/./src/views/DoctorLogin.vue?6860","webpack://frontend/./src/views/DoctorRegister.vue","webpack://frontend/./src/views/DoctorRegister.vue?b5e1","webpack://frontend/./src/views/DoctorDashboard.vue","webpack://frontend/./src/services/fileAPI.js","webpack://frontend/./src/services/patientService.js","webpack://frontend/./src/views/WebRTCSignalExchange.vue","webpack://frontend/./src/views/FileTransfer.vue","webpack://frontend/./src/views/FileTransfer.vue?5eac","webpack://frontend/./src/views/VideoChat.vue","webpack://frontend/./src/views/VideoChat.vue?f26d","webpack://frontend/./src/views/WebRTCSignalExchange.vue?79fa","webpack://frontend/./src/views/DoctorDashboard.vue?2e9d","webpack://frontend/./src/router/index.js","webpack://frontend/./src/main.js","webpack://frontend/webpack/bootstrap","webpack://frontend/webpack/runtime/chunk loaded","webpack://frontend/webpack/runtime/compat get default export","webpack://frontend/webpack/runtime/define property getters","webpack://frontend/webpack/runtime/global","webpack://frontend/webpack/runtime/hasOwnProperty shorthand","webpack://frontend/webpack/runtime/make namespace object","webpack://frontend/webpack/runtime/publicPath","webpack://frontend/webpack/runtime/jsonp chunk loading","webpack://frontend/webpack/startup"],"sourcesContent":["<template>\n  <nav>\n  </nav>\n  <router-view/>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=0f5bbf8a\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=0f5bbf8a&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"login-wrapper\">\r\n    <div class=\"header\">\r\n      <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\">\r\n    </div>\r\n    <div class=\"login-container\">\r\n      <h2>医生登录</h2>\r\n      <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n        <input v-model=\"doctorId\" type=\"text\" placeholder=\"医生ID\" required>\r\n        <input v-model=\"password\" type=\"password\" placeholder=\"密码\" required>\r\n        <button type=\"submit\">登录</button>\r\n      </form>\r\n      <button @click=\"navigateToRegister\" class=\"register-btn\">注册新医生</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { login } from '../services/authService';\r\n\r\nexport default {\r\n  setup() {\r\n    const doctorId = ref('');\r\n    const password = ref('');\r\n    const router = useRouter();\r\n\r\n    const handleLogin = async () => {\r\n      try {\r\n        const result = await login(doctorId.value, password.value);\r\n        if (result.success) {\r\n          router.push('/doctor-dashboard');\r\n        } else {\r\n          alert(`登录失败: ${result.message}`);\r\n        }\r\n      } catch (error) {\r\n        alert(\"登录过程中发生错误，请稍后再试。\");\r\n        console.error(\"Login process error:\", error);\r\n      }\r\n    };\r\n\r\n    const navigateToRegister = () => {\r\n      router.push('/doctor-register'); // 假设注册界面的路由是 /doctor-register\r\n    };\r\n\r\n    return { doctorId, password, handleLogin, navigateToRegister };\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.logo {\r\n  margin-top: 40px;\r\n  max-width: 80px;\r\n  /* 根据需要调整Logo的大小 */\r\n}\r\n\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  padding-bottom: 40px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  background-color: #f9fcff;\r\n}\r\n\r\n.login-form input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.login-form button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #20416E;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.login-form button:hover {\r\n  background-color: #003366;\r\n}\r\n\r\n.register-btn {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 15px;\r\n  background-color: #2196F3;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.register-btn:hover {\r\n  background-color: #007BFF;\r\n}\r\n</style>","// src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  //baseURL: 'http://10.102.226.45:8080/',\r\n  baseURL: 'http://localhost:8080/',\r\n  headers: {\r\n    'Content-Type': 'application/json;charset=utf-8',\r\n  }\r\n});\r\n\r\n// 请求拦截器\r\nAPI.interceptors.request.use((config) => {\r\n  const token = sessionStorage.getItem(\"token\");\r\n  console.log(\"拦截器处token\",token);\r\n  if (token) {\r\n    config.headers['Authorization'] = token; // 添加JWT授权头部\r\n  }\r\n  return config;\r\n}, error => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default API;\r\n","// src/services/authService.js\r\nimport API from './api';\r\n\r\nconst login = async (doctorId, password) => {\r\n  // 清除可能存在的旧令牌\r\n  sessionStorage.removeItem(\"token\");\r\n  sessionStorage.removeItem(\"doctorId\");\r\n  try {\r\n    const response = await API.post('/login', {\r\n      username: doctorId,\r\n      password: password\r\n    });\r\n    // 假设后端直接返回令牌字符串，而不是一个包含`token`字段的对象\r\n    const token = response.data;\r\n    console.log(\"登录时后端返回字符串token为\",token);\r\n    if (token && token.startsWith('Bearer ')) {\r\n      sessionStorage.setItem(\"token\", token); // 存储JWT\r\n      sessionStorage.setItem(\"doctorId\", doctorId); // 存储医生ID\r\n      return { success: true, token: token };\r\n    } else {\r\n      return { success: false, message: \"No token received\" };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.response);\r\n    // 提取并返回后端可能发送的具体错误消息\r\n    const errorMessage = error.response && error.response.data ? (error.response.data.error || error.response.data) : \"Login failed\";\r\n    return { success: false, message: errorMessage };\r\n  }\r\n};\r\n\r\nconst register = (data) => {\r\n  return API.post('/register', data);\r\n};\r\n\r\n//const logout = () => {\r\n  //sessionStorage.removeItem(\"token\"); // 移除存储的JWT\r\n  // 进一步处理，比如重定向到登录页面\r\n//};\r\n\r\n\r\nexport { login, register };\r\n","import { render } from \"./DoctorLogin.vue?vue&type=template&id=4972fc7c&scoped=true\"\nimport script from \"./DoctorLogin.vue?vue&type=script&lang=js\"\nexport * from \"./DoctorLogin.vue?vue&type=script&lang=js\"\n\nimport \"./DoctorLogin.vue?vue&type=style&index=0&id=4972fc7c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4972fc7c\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"register-container\">\r\n    <h2 class=\"form-title\">医生注册</h2>\r\n    <form @submit.prevent=\"handleRegister\" class=\"register-form\">\r\n      <input v-model=\"doctorId\" type=\"text\" placeholder=\"医生ID\" required>\r\n      <input v-model=\"password\" type=\"password\" placeholder=\"密码\" required>\r\n      <input v-model=\"doctorName\" type=\"text\" placeholder=\"医生姓名\" required>\r\n      <select v-model=\"doctorGender\" required>\r\n        <option disabled value=\"\">请选择性别</option>\r\n        <option>男</option>\r\n        <option>女</option>\r\n        <option>其他</option>\r\n      </select>\r\n      <button type=\"submit\">注册</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { register } from '../services/authService';\r\n\r\nexport default {\r\n  setup() {\r\n    const doctorId = ref(''); // 医生ID\r\n    const password = ref(''); // 密码\r\n    const doctorName = ref(''); // 医生姓名\r\n    const doctorGender = ref(''); // 医生性别\r\n\r\n    const router = useRouter();\r\n\r\n    const handleRegister = async () => {\r\n      try {\r\n        const registrationData = {\r\n          doctorId: doctorId.value,\r\n          password: password.value,\r\n          doctorName: doctorName.value, // 确保传递医生姓名\r\n          doctorGender: doctorGender.value // 确保传递医生性别\r\n        };\r\n        await register(registrationData); // 使用更新后的注册数据调用 register 函数\r\n        alert(\"注册成功\");\r\n        router.push('/'); // 假设登录页面的路由是 /\r\n      } catch (error) {\r\n        alert(\"注册失败\");\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    return {\r\n      doctorId,\r\n      password,\r\n      doctorName,\r\n      doctorGender,\r\n      handleRegister\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.register-container {\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #f9fcff;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-title {\r\n  text-align: center;\r\n  color: #20416E;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.register-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.register-form input,\r\n.register-form select {\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.register-form button {\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #20416E;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.register-form button:hover {\r\n  background-color: #003366;\r\n}\r\n</style>","import { render } from \"./DoctorRegister.vue?vue&type=template&id=31f2a5be\"\nimport script from \"./DoctorRegister.vue?vue&type=script&lang=js\"\nexport * from \"./DoctorRegister.vue?vue&type=script&lang=js\"\n\nimport \"./DoctorRegister.vue?vue&type=style&index=0&id=31f2a5be&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"doctor-dashboard\">\r\n    <div class=\"sidebar\">\r\n      <div class=\"logo\">\r\n        <!-- logo图片位置 -->\r\n        <img src=\"@/assets/logo.png\" alt=\"logo\" />\r\n      </div>\r\n      <button :class=\"{ active: currentView === 'patientList' }\" @click=\"currentView = 'patientList'\">\r\n        病人列表\r\n      </button>\r\n      <button :class=\"{ active: currentView === 'addPatient' }\" @click=\"currentView = 'addPatient'\">\r\n        新增病人\r\n      </button>\r\n      <button :class=\"{ active: currentView === 'cooperation' }\" @click=\"currentView = 'cooperation'\">\r\n        远程协作\r\n      </button>\r\n    </div>\r\n    <div class=\"content\">\r\n      <!-- 上边栏 -->\r\n      <div class=\"topbar\">\r\n        <div class=\"user-info\">\r\n          当前用户ID: {{ currentUserId }}\r\n        </div>\r\n        <button @click=\"logout\">登出</button>\r\n      </div>\r\n\r\n      <div v-if=\"currentView === 'patientList'\">\r\n        <!-- 病人列表模块的内容 -->\r\n        <h2>病人列表</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>病历号</th>\r\n              <th>姓名</th>\r\n              <th>年龄</th>\r\n              <th>性别</th>\r\n              <th>手机号</th>\r\n              <th>就诊时间</th>\r\n              <th>相关文件</th>\r\n              <th>操作</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"patient in patients\" :key=\"patient.id\">\r\n              <td>{{ patient.id }}</td>\r\n              <td>{{ patient.name }}</td>\r\n              <td>{{ patient.age }}</td>\r\n              <td>{{ patient.gender }}</td>\r\n              <td>{{ patient.phoneNumber }}</td>\r\n              <td>{{ patient.visitTime }}</td>\r\n              <td>\r\n                <button v-if=\"patient.files && patient.files.length > 0\" @click=\"showPatientFiles(patient)\">\r\n                  文件\r\n                </button>\r\n                <span v-else>无文件</span>\r\n              </td>\r\n              <td>\r\n                <button @click=\"startEdit(patient)\">编辑</button>\r\n                <button @click=\"deletePatientMethod(patient.id)\">删除</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <button @click=\"fetchPatients\" class=\"fetch-patients\">刷新病人列表</button>\r\n        <div v-if=\"editingPatient\">\r\n          <h2>编辑病人信息</h2>\r\n          <form @submit.prevent=\"updatePatientInfo\">\r\n            名字: <input v-model=\"editingPatient.name\" type=\"text\" placeholder=\"名字\"><br>\r\n            年龄: <input v-model=\"editingPatient.age\" type=\"number\" placeholder=\"年龄\"><br>\r\n            性别: <input v-model=\"editingPatient.gender\" type=\"text\" placeholder=\"性别\"><br>\r\n            疾病: <input v-model=\"editingPatient.disease\" type=\"text\" placeholder=\"疾病\"><br>\r\n            电话: <input v-model=\"editingPatient.phoneNumber\" type=\"text\" placeholder=\"手机号\" maxlength=\"11\"><br>\r\n            <button type=\"submit\">更新信息</button>\r\n          </form>\r\n          <button @click=\"cancelEdit\">取消</button>\r\n        </div>\r\n      </div>\r\n      <div v-else-if=\"currentView === 'addPatient'\">\r\n        <!-- 新增病人模块的内容 -->\r\n        <h2>新增病人</h2>\r\n        <form @submit.prevent=\"addNewPatient\">\r\n          病号: <input v-model=\"newPatient.id\" type=\"text\" placeholder=\"病号\"><br>\r\n          名字: <input v-model=\"newPatient.name\" type=\"text\" placeholder=\"名字\"><br>\r\n          年龄: <input v-model=\"newPatient.age\" type=\"number\" placeholder=\"年龄\"><br>\r\n          性别: <input v-model=\"newPatient.gender\" type=\"text\" placeholder=\"性别\"><br>\r\n          疾病: <input v-model=\"newPatient.disease\" type=\"text\" placeholder=\"疾病\"><br>\r\n          电话: <input v-model=\"newPatient.phoneNumber\" type=\"text\" placeholder=\"手机号\" maxlength=\"11\"><br>\r\n          <button type=\"submit\">添加病人</button>\r\n        </form>\r\n      </div>\r\n      <div v-else-if=\"currentView === 'cooperation'\">\r\n        <!-- 远程协作模块的内容 -->\r\n        <h2>远程协作</h2>\r\n        <div class=\"file-transfer\">\r\n          <!-- 文件传输界面 -->\r\n          <div v-if=\"!isInRoom\">\r\n            <input v-model=\"roomCode\" placeholder=\"输入4位房间代码\" maxlength=\"4\" />\r\n            <button @click=\"createRoom\">创建房间</button>\r\n            <button @click=\"joinRoom\">加入房间</button>\r\n          </div>\r\n          <div v-else>\r\n            <p>当前房间代码: {{ roomCode }}</p>\r\n            <button @click=\"leaveRoom\">退出房间</button>\r\n            <h2>文件传输</h2>\r\n            <input type=\"file\" @change=\"handleFileSelected\" ref=\"fileInput\" />\r\n            <button @click=\"sendFile\" :disabled=\"isSending\">发送病历等文件</button>\r\n            <p>文件传输状态: {{ fileTransferStatus }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"video-chat\">\r\n          <!-- 视频聊天界面 -->\r\n          <div v-if=\"isInRoom\">\r\n            <h2>视频聊天</h2>\r\n            <button @click=\"startChat\">开始视频会诊</button>\r\n            <button @click=\"endChat\">结束视频会诊</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div v-if=\"showFilesModal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n      <img :src=\"currentFile\" alt=\"病人文件\">\r\n      <div class=\"buttons-container\"> <!-- 按钮容器 -->\r\n        <button @click=\"previousFile\">上一张</button>\r\n        <button @click=\"nextFile\">下一张</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- WebSocket信号交换、房间组件 -->\r\n  <WebRTCSignalExchange ref=\"webRTCSignalExchange\" url=\"http://localhost:8080/signal\" topic=\"/topic/offer\"\r\n    appDestination=\"/app/signal/offer\" :roomCode=roomCode v-if=\"currentUserId\" :currentUserId=currentUserId\r\n    @file-transfer-complete=\"handleFileTransferComplete\" @file-upload-request=\"handleUploadToServer\"\r\n    @join-room-success=\"handleJoinRoomSuccess\" />\r\n\r\n  <div v-if=\"errorMessage\" class=\"error-message\">\r\n    错误：{{ errorMessage }}\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport API from '@/services/api';\r\nimport fileAPI from '@/services/fileAPI';\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { addPatient, deletePatient, getPatientsByDoctorId, updatePatient } from '../services/patientService';\r\nimport WebRTCSignalExchange from './WebRTCSignalExchange.vue';\r\n\r\nexport default {\r\n  watch: {\r\n    currentView(newVal) {\r\n      if (newVal === 'patientList') {\r\n        this.fetchPatients();\r\n      }\r\n    }\r\n  },\r\n\r\n  components: {\r\n    WebRTCSignalExchange,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      signalServerUrl: \"http://localhost:8080/signal\",\r\n      signalTopic: \"/topic/offer\",\r\n      appDestination: \"/app/signal/offer\",\r\n      fileTransferStatus: '未开始',\r\n      fileInput: null,\r\n      roomCode: '',\r\n      isInRoom: false,\r\n      errorMessage: '', // 初始为空字符串\r\n      currentUserId: sessionStorage.getItem(\"doctorId\"),\r\n      isSending: false, // 新增状态，控制发送按钮是否禁用\r\n\r\n      currentView: 'patientList', // 默认显示病人列表\r\n      showFilesModal: false,\r\n      currentFileIndex: 0,\r\n      patientFiles: [],\r\n      currentFile: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async createRoom() {\r\n      if (this.roomCode.length !== 4) {\r\n        alert(\"房间代码必须为4位。\");\r\n        return;\r\n      }\r\n      // 手动初始化WebSocket连接\r\n      this.$refs.webRTCSignalExchange.initConnection();\r\n      try {\r\n        const response = await API.post('/api/createRoom', { roomCode: this.roomCode });\r\n        // 如果请求成功，处理响应\r\n        if (response.data.message === \"房间创建成功，并已加入。\") {\r\n          this.isInRoom = true;\r\n          this.fileTransferStatus = \"房间创建成功，请选择文件或等待接收方加入。\";\r\n        }\r\n      } catch (error) {\r\n        // 如果请求失败，处理错误\r\n        if (error.response && error.response.data) {\r\n          // 服务器返回了一个错误消息\r\n          console.error(\"创建房间失败:\", error.response.data.error);\r\n          alert(`创建房间失败: ${error.response.data.error}`);\r\n        } else {\r\n          // 处理其他类型的错误（例如网络问题或配置错误）\r\n          console.error(\"请求失败:\", error);\r\n          alert(\"请求失败，请稍后再试。\");\r\n        }\r\n      }\r\n    },\r\n\r\n    async joinRoom() {\r\n      if (this.roomCode.length !== 4) {\r\n        alert(\"房间代码必须为4位。\");\r\n        return;\r\n      }\r\n      // 手动初始化WebSocket连接\r\n      this.$refs.webRTCSignalExchange.initConnection();\r\n      // 调用修改后的逻辑来发送加入房间的请求\r\n      this.sendRoomJoinSignal();\r\n    },\r\n\r\n    sendRoomJoinSignal() {\r\n      // 由于WebSocket连接可能还没完全建立，我们通过轮询来等待连接建立\r\n      const waitForConnectionAndSend = () => {\r\n        if (this.$refs.webRTCSignalExchange.isConnected) {\r\n          // 连接已建立，发送加入房间的请求\r\n          API.post('/api/joinRoom', { roomCode: this.roomCode })\r\n            .then(response => {\r\n              if (response.data && response.data.message && response.data.message.includes(\"成功加入房间\")) {\r\n                this.isInRoom = true;\r\n                this.fileTransferStatus = response.data.message;\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error(\"加入房间失败:\", error);\r\n              alert(\"加入房间失败，请稍后再试。\");\r\n            });\r\n        } else {\r\n          setTimeout(waitForConnectionAndSend, 100); // 等待100毫秒后重试\r\n        }\r\n      };\r\n\r\n      waitForConnectionAndSend();\r\n    },\r\n\r\n    async leaveRoom() {\r\n      const response = await API.post('/api/leaveRoom', { roomCode: this.roomCode });\r\n      if (response.data.message === \"已成功离开房间。\") {\r\n        this.$refs.webRTCSignalExchange.$refs.videoChatComponent.cleanupVideoChat();\r\n        this.resetRoomState();\r\n      } else {\r\n        alert(\"退出房间失败：\" + response.data.error);\r\n      }\r\n    },\r\n\r\n    resetRoomState() {\r\n      this.isInRoom = false;\r\n      this.roomCode = '';\r\n      this.fileTransferStatus = '未开始';\r\n      // 清理其他相关状态\r\n    },\r\n\r\n    handleFileSelected() {\r\n      this.fileTransferStatus = \"文件已选择，准备上传...\";\r\n    },\r\n\r\n    sendFile() {\r\n      if (!this.$refs.webRTCSignalExchange.$refs.fileTransferComponent.dataChannel ||\r\n        this.$refs.webRTCSignalExchange.$refs.fileTransferComponent.dataChannel.readyState !== \"open\") {\r\n        this.errorMessage = \"数据通道未准备好或未开启，无法发送文件。\";\r\n        return;\r\n      }\r\n      const file = this.$refs.fileInput.files[0];\r\n      if (!file) {\r\n        this.errorMessage = \"请先选择一个文件。\";\r\n        return;\r\n      }\r\n      this.fileTransferStatus = '正在发送...';\r\n      this.isSending = true; // 设置发送状态为true，禁用发送按钮\r\n      this.$refs.webRTCSignalExchange.$refs.fileTransferComponent.sendFile(file);\r\n    },\r\n\r\n    startChat() {\r\n      // 手动发起视频聊天\r\n      this.$refs.webRTCSignalExchange.startVideoChat();\r\n    },\r\n\r\n    endChat() {\r\n      // 手动结束视频聊天\r\n      this.$refs.webRTCSignalExchange.$refs.videoChatComponent.cleanupVideoChat();\r\n    },\r\n\r\n    handleFileTransferComplete() {\r\n      // 更新UI状态以反映文件传输已完成\r\n      this.fileTransferStatus = \"文件传输完成\";\r\n      this.isSending = false;\r\n    },\r\n\r\n    handleJoinRoomSuccess() {\r\n      // 更新UI状态以反映对方已成功加入房间\r\n      this.fileTransferStatus = \"对方已成功加入房间\";\r\n    },\r\n\r\n    handleUploadToServer(selectedFile) {\r\n      console.log(\"准备开始上传文件到数据库\");\r\n      console.log(selectedFile);\r\n      const patientId = prompt(\"请输入病人ID：\");\r\n      if (patientId && selectedFile && selectedFile.file) {\r\n        // 使用FormData准备文件和病人ID数据\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedFile.file); // 从selectedFile对象中提取Blob对象\r\n        formData.append(\"patientId\", patientId);\r\n\r\n        // Debugging: 显示FormData内容\r\n        for (let [key, value] of formData.entries()) {\r\n          console.log(`${key}: ${value}`);\r\n        }\r\n\r\n        // 发送POST请求到服务器\r\n        fileAPI.post('/api/uploadFile', formData, {\r\n          headers: {\r\n            // 移除'Content-Type': 'multipart/form-data'，让浏览器自动设置\r\n          }\r\n        }).then(() => {\r\n          alert(\"文件上传成功！\");\r\n        }).catch(error => {\r\n          console.error(\"文件上传失败\", error);\r\n          alert(\"文件上传失败！\");\r\n        });\r\n      } else {\r\n        alert(\"请确保已选择文件并输入病人ID\");\r\n      }\r\n    },\r\n\r\n    showPatientFiles(patient) {\r\n      this.patientFiles = patient.files; // 假设每个patient对象有一个files数组\r\n      this.currentFileIndex = 0; // 从第一个文件开始显示\r\n      this.currentFile = this.patientFiles.length ? this.patientFiles[0] : '';\r\n      this.showFilesModal = true;\r\n    },\r\n    closeModal() {\r\n      this.showFilesModal = false;\r\n    },\r\n    previousFile() {\r\n      if (this.patientFiles.length) {\r\n        this.currentFileIndex = (this.currentFileIndex + this.patientFiles.length - 1) % this.patientFiles.length;\r\n        this.currentFile = this.patientFiles[this.currentFileIndex];\r\n      }\r\n    },\r\n    nextFile() {\r\n      if (this.patientFiles.length) {\r\n        this.currentFileIndex = (this.currentFileIndex + 1) % this.patientFiles.length;\r\n        this.currentFile = this.patientFiles[this.currentFileIndex];\r\n      }\r\n    },\r\n\r\n  },\r\n  mounted() {\r\n    this.fileInput = this.$refs.fileInput;\r\n  },\r\n\r\n  setup() {\r\n    const router = useRouter();\r\n    const patients = ref([]);\r\n    const editingPatient = ref(null);\r\n\r\n    const fetchPatients = async () => {\r\n      try {\r\n        // 假设登录时保存了医生ID\r\n        const doctorId = sessionStorage.getItem(\"doctorId\");\r\n        if (!doctorId) {\r\n          console.error('医生ID未找到,请确保已登录');\r\n          return;\r\n        }\r\n\r\n        const response = await getPatientsByDoctorId(doctorId);\r\n        const patientsData = response.data;\r\n\r\n        // 更新patients响应式引用的值\r\n        patients.value = patientsData;\r\n\r\n        // 为每个病人获取文件信息\r\n        for (let patient of patientsData) {\r\n          await fetchPatientFiles(patient.id);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('获取病人列表失败:', error);\r\n      }\r\n\r\n    };\r\n\r\n    //onMounted(fetchPatients);\r\n    onMounted(() => {\r\n      fetchPatients();\r\n    });\r\n\r\n    const startEdit = (patient) => {\r\n      editingPatient.value = { ...patient };\r\n      // 注意：确保你的后端返回的时间字符串是可以直接被这里处理的\r\n    };\r\n\r\n    //获取病人数据库的文件\r\n    const fetchPatientFiles = async (patientId) => {\r\n      try {\r\n        const response = await API.get(`/api/patientFiles/${patientId}`);\r\n        const files = response.data;\r\n        if (files.length > 0) {\r\n          const patientIndex = patients.value.findIndex(p => p.id === patientId);\r\n          if (patientIndex !== -1) {\r\n            // 注意：Vue 3的响应式更新方式\r\n            patients.value[patientIndex].files = files; // 直接将文件数组分配给病人的files属性\r\n            patients.value = [...patients.value]; // 通过替换整个数组来触发响应式更新\r\n            //console.log(\"更新后数据\", patients.value[patientIndex].file); // 确认更新后的数据\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"获取病人文件失败\", error);\r\n      }\r\n    };\r\n\r\n    const updatePatientInfo = async () => {\r\n      try {\r\n        const doctorId = sessionStorage.getItem(\"doctorId\"); // 从sessionStorage中获取doctorId\r\n        if (!doctorId) {\r\n          throw new Error('医生ID未找到,请确保已登录。');\r\n        }\r\n        if (editingPatient.value.phoneNumber && editingPatient.value.phoneNumber.length !== 11) {\r\n          throw new Error('手机号必须为11位');\r\n        }\r\n        await updatePatient(editingPatient.value, doctorId); // 注意传递doctorId作为第二个参数\r\n        alert('病人信息更新成功');\r\n        fetchPatients();\r\n        editingPatient.value = null;\r\n      } catch (error) {\r\n        console.error('更新病人信息失败:', error);\r\n      }\r\n    };\r\n\r\n    const cancelEdit = () => {\r\n      editingPatient.value = null;\r\n    };\r\n\r\n    const newPatient = ref({});\r\n\r\n    const addNewPatient = async () => {\r\n      try {\r\n        const doctorId = sessionStorage.getItem(\"doctorId\"); // 获取当前登录医生的ID\r\n        if (!doctorId) {\r\n          throw new Error('医生ID未找到,请确保已登录');\r\n        }\r\n        if (newPatient.value.phoneNumber && newPatient.value.phoneNumber.length !== 11) {\r\n          throw new Error('手机号必须为11位');\r\n        }\r\n        // 设置访问时间为当前时间，格式为YYYY-MM-DDTHH:mm:ss\r\n        const currentTime = new Date().toISOString();\r\n        const visitTime = currentTime.split('.')[0]; // 移除毫秒部分以符合您的格式要求\r\n\r\n        const patientData = {\r\n          ...newPatient.value,\r\n          doctor: doctorId, // 这里假设API需要doctor作为一个字段\r\n          visitTime: visitTime,\r\n        };\r\n\r\n        await addPatient(patientData, doctorId);\r\n        alert('病人添加成功');\r\n        fetchPatients();\r\n        newPatient.value = {}; // 重置表单\r\n      } catch (error) {\r\n        console.error('添加病人失败:', error.message);\r\n      }\r\n    };\r\n\r\n    const deletePatientMethod = async (patientId) => {\r\n      try {\r\n        const doctorId = sessionStorage.getItem(\"doctorId\");\r\n        if (!doctorId) {\r\n          throw new Error('医生ID未找到,请确保已登录');\r\n        }\r\n        await deletePatient(patientId, doctorId); // 使用已定义的方法\r\n        alert('病人删除成功');\r\n        fetchPatients();\r\n      } catch (error) {\r\n        console.error('删除病人失败:', error.message);\r\n      }\r\n    };\r\n\r\n    const logout = () => {\r\n      // 清除本地存储中的JWT和医生ID\r\n      sessionStorage.removeItem(\"token\");\r\n      sessionStorage.removeItem(\"doctorId\");\r\n      // 重定向到登录界面\r\n      router.push('/');\r\n      // 关闭信令通道和WebRTC连接\r\n    };\r\n\r\n    return {\r\n      patients,\r\n      newPatient,\r\n      editingPatient,\r\n      fetchPatients,\r\n      fetchPatientFiles,\r\n      startEdit,\r\n      addNewPatient,\r\n      deletePatientMethod,\r\n      updatePatientInfo,\r\n      cancelEdit,\r\n      logout,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 确保.html和body没有额外的外边距或内边距 */\r\nhtml,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n}\r\n\r\n/* 调整doctor-dashboard布局 */\r\n.doctor-dashboard {\r\n  display: flex;\r\n  min-height: 100vh;\r\n}\r\n\r\n/* 侧边栏样式 */\r\n.doctor-dashboard>div:first-child {\r\n  width: 200px;\r\n  background-color: #333;\r\n  color: white;\r\n  padding: 1rem;\r\n}\r\n\r\n.doctor-dashboard .logo {\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  max-width: 80px;\r\n}\r\n\r\n.doctor-dashboard .logo img {\r\n  width: 100%;\r\n}\r\n\r\n/* 内容区样式 */\r\n.doctor-dashboard>div:nth-child(2) {\r\n  flex-grow: 1;\r\n  padding: 2rem;\r\n}\r\n\r\n/* 侧边栏样式 */\r\n.sidebar {\r\n  width: 200px;\r\n  background-color: #333;\r\n  color: white;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.sidebar button {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  padding: 10px;\r\n  margin-bottom: 5px;\r\n  text-align: left;\r\n}\r\n\r\n.sidebar button:hover {\r\n  background-color: #555;\r\n}\r\n\r\n.sidebar button.active {\r\n  /* 高亮时的背景色 */\r\n  background-color: #666;\r\n  /* 高亮时的文字颜色 */\r\n  color: #fff;\r\n\r\n}\r\n\r\n/* 内容区样式 */\r\n.content {\r\n  flex-grow: 1;\r\n  padding: 0;\r\n  position: relative;\r\n  /* 允许绝对定位的子元素相对于此定位 */\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n/* 奇数行的样式 */\r\ntr:nth-child(odd) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n/* 偶数行的样式 */\r\ntr:nth-child(even) {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n/* 分开“刷新病人列表”按钮与表格 */\r\nbutton.fetch-patients {\r\n  margin-bottom: 20px;\r\n  /* 增加与表格的间距 */\r\n}\r\n\r\n/* 表中的编辑和删除按钮分开一定距离 */\r\ntable button {\r\n  margin-right: 10px;\r\n  /* 增加按钮之间的间距 */\r\n}\r\n\r\n/* 最后一个按钮取消右边距 */\r\ntable button:last-child {\r\n  margin-right: 0;\r\n}\r\n\r\n/* 移除topbar的宽度限制 */\r\n.topbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #eee;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n/* 上边栏左侧模块标题样式 */\r\n.topbar .module-title {\r\n  font-size: 20px;\r\n  /* 根据需要调整 */\r\n  font-weight: bold;\r\n}\r\n\r\n/* 上边栏右侧内容 */\r\n.topbar .right-content {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-info {\r\n  margin-right: auto;\r\n  /* 推动所有元素到右侧 */\r\n  padding-right: 20px;\r\n  /* 或根据需要调整 */\r\n}\r\n\r\n.modal {\r\n  display: block;\r\n  /* 显示模态框 */\r\n  position: fixed;\r\n  /* 固定定位 */\r\n  z-index: 2;\r\n  /* 确保它在其他内容之上 */\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  /* 全屏宽度 */\r\n  height: 100%;\r\n  /* 全屏高度 */\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  /* 半透明背景 */\r\n  padding-top: 100px;\r\n  /* 从顶部留出一些空间 */\r\n}\r\n\r\n.modal-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* 改变布局方向为垂直 */\r\n  align-items: center;\r\n  /* 居中对齐 */\r\n  justify-content: center;\r\n  /* 内容居中 */\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  background-color: #fefefe;\r\n  margin: auto;\r\n  border-radius: 5px;\r\n  width: auto;\r\n  /* 宽度自适应内容 */\r\n  max-width: 600px;\r\n  /* 最大宽度，可根据需要调整 */\r\n}\r\n\r\n.modal-content img {\r\n  max-width: 100%;\r\n  /* 图片最大宽度为容器宽度 */\r\n  max-height: 80vh;\r\n  /* 最大高度不超过视窗高度的80% */\r\n}\r\n\r\n/* 按钮容器 */\r\n.buttons-container {\r\n  display: flex;\r\n  width: 100%;\r\n  /* 占满整个容器宽度 */\r\n  justify-content: space-between;\r\n  /* 按钮间距平均分布 */\r\n}\r\n\r\n/* 按钮样式 */\r\n.modal-content button {\r\n  padding: 10px 20px;\r\n  margin: 10px;\r\n  /* 增加按钮外边距 */\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  flex: none;\r\n}\r\n\r\n\r\n.close {\r\n  position: absolute;\r\n  /* 绝对定位 */\r\n  top: 20px;\r\n  /* 距离顶部20px */\r\n  right: 30px;\r\n  /* 距离右侧30px */\r\n  color: #fff;\r\n  /* 白色图标 */\r\n  background-color: #f44336;\r\n  /* 背景色 */\r\n  border-radius: 50%;\r\n  /* 圆形 */\r\n  padding: 5px 12px;\r\n  /* 内间距 */\r\n  border: none;\r\n  /* 无边框 */\r\n  cursor: pointer;\r\n  /* 鼠标指针效果 */\r\n}\r\n\r\n/* 表单样式优化 */\r\ninput[type=\"text\"],\r\ninput[type=\"number\"],\r\ninput[type=\"file\"] {\r\n  border: 1px solid #ccc;\r\n  /* 更细的边框 */\r\n  border-radius: 4px;\r\n  /* 圆角 */\r\n  padding: 10px;\r\n  /* 更大的填充区域 */\r\n  width: 90%;\r\n  /* 输入框宽度 */\r\n  margin-bottom: 15px;\r\n  /* 增加与下一个元素的间距 */\r\n}\r\n\r\nbutton {\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  background-color: #007bff;\r\n  /* 蓝色背景 */\r\n  color: white;\r\n  /* 白色文字 */\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  /* 平滑过渡效果 */\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n  /* 按钮悬浮时的颜色变深 */\r\n}\r\n\r\n/* 分隔刷新按钮和表格 */\r\nbutton.fetch-patients {\r\n  margin: 20px;\r\n}\r\n\r\n/* 远程协作模块样式优化 */\r\n.file-transfer,\r\n.video-chat {\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n  /* 与下一个模块的间距 */\r\n}\r\n\r\n.file-transfer h2,\r\n.video-chat h2 {\r\n  margin-top: 0;\r\n  color: #007bff;\r\n  /* 主题颜色 */\r\n}\r\n\r\n/* 进度条样式（示例） */\r\n.progress-bar {\r\n  width: 100%;\r\n  background-color: #e0e0e0;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  /* 确保内部元素不会溢出 */\r\n}\r\n\r\n.progress-bar-inner {\r\n  height: 20px;\r\n  background-color: #007bff;\r\n  width: 0%;\r\n  /* 初始宽度为0，之后通过JavaScript调整 */\r\n  transition: width 0.4s ease;\r\n  /* 平滑过渡效果 */\r\n}\r\n\r\n.file-transfer button {\r\n  margin-left: 10px;\r\n}\r\n\r\n/* 错误消息样式 */\r\n.error-message {\r\n  color: red;\r\n  margin-top: 1rem;\r\n}\r\n\r\n/* 其他特定部分的样式可以根据需要添加 */\r\n</style>","// src/services/fileAPI.js\r\nimport axios from 'axios';\r\n\r\nconst fileAPI = axios.create({\r\n  //baseURL: 'http://10.102.226.45:8080/',\r\n  baseURL: 'http://localhost:8080/',\r\n  headers: {\r\n    \r\n  }\r\n});\r\n\r\n// 请求拦截器\r\nfileAPI.interceptors.request.use((config) => {\r\n  const token = sessionStorage.getItem(\"token\");\r\n  console.log(\"fileAPI拦截器处token\",token);\r\n  if (token) {\r\n    config.headers['Authorization'] = token; // 添加JWT授权头部\r\n  }\r\n  return config;\r\n}, error => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default fileAPI;\r\n","// src/services/patientService.js\r\nimport API from './api';\r\n\r\nconst addPatient = (patientData, doctorId) => {\r\n  // 将doctorId添加到请求体中，以便后端能够识别\r\n  return API.post(`/patients?doctorId=${doctorId}`, patientData);\r\n};\r\n\r\nconst updatePatient = (patientData, doctorId) => {\r\n  // 注意这里不再需要将patientId嵌入到URL中\r\n  console.log(\"Updating patient with doctorId:\", doctorId);\r\n  return API.put(`/patients?doctorId=${doctorId}`, patientData);\r\n};\r\n\r\nconst getAllPatients = () => {\r\n  return API.get('/patients');\r\n};\r\n\r\nconst getPatientsByDoctorId = (doctorId) => {\r\n  return API.get(`/patients/by-doctor/${doctorId}`);\r\n};\r\n\r\nconst deletePatient = (patientId, doctorId) => {\r\n  return API.delete(`/patients/${patientId}?doctorId=${doctorId}`);\r\n};\r\n\r\n\r\nexport { addPatient, updatePatient, getAllPatients, getPatientsByDoctorId, deletePatient };\r\n","<template>\r\n    <div>\r\n        <!-- 子组件的引用 -->\r\n        <FileTransfer ref=\"fileTransferComponent\" @send-message=\"sendMessage\"\r\n            @file-transfer-complete=\"handleFileTransferComplete\" @file-upload-request=\"handleFileUploadRequest\"\r\n            @join-room-success=\"handleJoinRoomSuccess\" />\r\n        <VideoChat ref=\"videoChatComponent\" @send-message=\"sendMessage\" />\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'webstomp-client';\r\nimport FileTransfer from './FileTransfer';\r\nimport VideoChat from './VideoChat';\r\n\r\nexport default {\r\n    name: 'WebRTCSignalExchange',\r\n    components: {\r\n        FileTransfer,\r\n        VideoChat\r\n    },\r\n    props: {\r\n        url: String,\r\n        topic: String,\r\n        roomCode: String, // 确保传入roomCode作为prop\r\n        appDestination: String,\r\n        currentUserId: String, // 从父组件传入当前用户ID\r\n    },\r\n    data() {\r\n        return {\r\n            stompClient: null,\r\n            errorMessage: '',\r\n            destination: null, // 目标用户标识\r\n            isConnected: false, // 添加一个标志来指示WebSocket连接是否已经建立\r\n        };\r\n    },\r\n    methods: {\r\n        initConnection() {\r\n            this.connect();\r\n        },\r\n\r\n        connect() {\r\n            let token = sessionStorage.getItem('token'); // 令牌存储在sessionStorage中\r\n            console.log(\"sessionStorage Token:\", token);\r\n            // 检查令牌是否以\"Bearer \"开头，如果是，则移除该前缀\r\n            if (token && token.startsWith('Bearer ')) {\r\n                token = token.substring('Bearer '.length);\r\n                console.log(\"修改后Token:\", token);\r\n            }\r\n            // 注意：这里直接附加处理过的令牌，无需使用encodeURIComponent\r\n            const urlWithToken = `${this.url}?token=${token}`; // 直接附加令牌\r\n            console.log(\"当前urlWithToken:\", urlWithToken);\r\n\r\n            const socket = new SockJS(urlWithToken);\r\n            this.stompClient = Stomp.over(socket);\r\n            this.stompClient.connect({}, frame => {\r\n                console.log('Connected: ' + frame);\r\n\r\n                console.log(\"当前用户ID:\", this.currentUserId);\r\n                console.log(\"当前房间编号:\", this.roomCode);\r\n                // 订阅加入房间的通知\r\n                this.stompClient.subscribe('/user/' + this.currentUserId + '/queue/join', message => {\r\n                    console.log(`收到加入房间通知！`);\r\n                    const data = JSON.parse(message.body);\r\n                    if (data.destination && data.destination !== this.currentUserId) {\r\n                        console.log(`Destination set to ${data.destination}`);\r\n                        this.destination = data.destination; // 更新目标用户ID\r\n                        this.$refs.fileTransferComponent.destination = data.destination;\r\n                        if (data.destination < this.currentUserId) {\r\n                            //加入房间即发起文件传输\r\n                            this.$refs.fileTransferComponent.setupWebRTCDataChannel();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // 订阅离开房间的通知\r\n                this.stompClient.subscribe(`/topic/room/${this.roomCode}`, message => {\r\n                    console.log(`收到离开房间通知！`);\r\n                    const data = JSON.parse(message.body);\r\n                    if (data.action && data.action === \"left\" && data.userId === this.destination) {\r\n                        console.log(`${this.destination} has left the room.`);\r\n                        this.terminateConnectionWithUser(this.destination);\r\n                    }\r\n                });\r\n\r\n                // 订阅Offer、Answer和Candidate消息\r\n                this.stompClient.subscribe('/user/' + this.currentUserId + '/queue/offer', message => {\r\n                    this.handleSignalMessage(JSON.parse(message.body));\r\n                });\r\n\r\n                // 请确保在 connect 方法中添加了下面这行来处理接收方的数据通道创建\r\n\r\n                this.isConnected = true;\r\n\r\n            }, error => {\r\n                console.error('Connection error: ' + error);\r\n                this.errorMessage = '连接失败，请检查网络后重试。';\r\n                this.isConnected = false;\r\n            });\r\n        },\r\n\r\n        waitForConnection(callback) {\r\n            setTimeout(() => {\r\n                if (this.stompClient.connected) {\r\n                    callback();\r\n                } else {\r\n                    this.waitForConnection(callback);\r\n                }\r\n            }, 100); // 检查连接状态的间隔时间可以根据实际情况调整\r\n        },\r\n\r\n        terminateConnectionWithUser(userId) {\r\n            console.log(`Terminating connection with ${userId}`);\r\n            // 调用子组件的清理方法\r\n            if (this.$refs.fileTransferComponent) {\r\n                this.$refs.fileTransferComponent.cleanupFileChat();\r\n            }\r\n            if (this.$refs.videoChatComponent) {\r\n                this.$refs.videoChatComponent.cleanupVideoChat();\r\n            }\r\n            // 重置 destination 以便可以与新的用户建立连接\r\n            this.destination = null;\r\n        },\r\n\r\n        handleSignalMessage(signalMessage) {\r\n            // 从信令消息中直接读取`type`字段\r\n            const { type, content } = signalMessage;\r\n\r\n            let signalData;\r\n            try {\r\n                signalData = JSON.parse(content);\r\n            } catch (error) {\r\n                console.error('Error parsing signal message content:', error);\r\n                return;\r\n            }\r\n\r\n            //console.log(\"Received signal data:\", signalData);\r\n            //console.log(\"Signal type is:\", type);\r\n\r\n            // 根据类型将信号分发给相应的子组件\r\n            if (type.startsWith('video-')) {\r\n                this.$refs.videoChatComponent.handleVideoSignalMessage(type, signalData);\r\n            } else {\r\n                this.$refs.fileTransferComponent.handleFileSignalMessage(type, signalData);\r\n            }\r\n        },\r\n\r\n        sendMessage(message) {\r\n            if (this.stompClient && this.isConnected && this.destination) {\r\n                // 包括destination字段\r\n\r\n                // 对消息进行区分，以处理不同类型的信令（文件传输或视频聊天）\r\n                let msgContent;\r\n                if (message.offer || message.answer || message.candidate) {\r\n                    msgContent = JSON.stringify(message.offer || message.answer || message.candidate);\r\n                } else {\r\n                    // 处理视频聊天的信令消息\r\n                    msgContent = JSON.stringify(message);\r\n                }\r\n\r\n                const msg = {\r\n                    ...message,\r\n                    destination: this.destination,\r\n                    content: msgContent\r\n                };\r\n                this.stompClient.send(this.appDestination, JSON.stringify(msg), {});\r\n            } else {\r\n                console.error(\"Cannot send message, destination is undefined\");\r\n            }\r\n        },\r\n\r\n        handleFileTransferComplete() {\r\n            // 将发送文件成功事件向上传递\r\n            this.$emit('file-transfer-complete');\r\n        },\r\n\r\n        handleFileUploadRequest(file) {\r\n            console.log(\"上传事件已被WebRTCSignalExchange组件转发\");\r\n            // 转发事件到DoctorDashboard组件\r\n            this.$emit('file-upload-request', file);\r\n        },\r\n\r\n        handleJoinRoomSuccess() {\r\n            // 将发送文件成功事件向上传递\r\n            this.$emit('join-room-success');\r\n        },\r\n\r\n        startVideoChat() {\r\n            //发起视频聊天\r\n            this.$refs.videoChatComponent.isInitiator = true;\r\n            this.$refs.videoChatComponent.initVideoCall();\r\n        },\r\n\r\n        disconnect() {\r\n            // 调用子组件的清理方法\r\n            if (this.$refs.fileTransferComponent) {\r\n                this.$refs.fileTransferComponent.cleanupFileChat();\r\n            }\r\n            if (this.$refs.videoChatComponent) {\r\n                this.$refs.videoChatComponent.cleanupVideoChat();\r\n            }\r\n\r\n            if (this.stompClient && this.isConnected) {\r\n                this.stompClient.disconnect(() => {\r\n                    console.log(\"Disconnected from WebSocket server.\");\r\n                    this.isConnected = false;\r\n                });\r\n            }\r\n\r\n\r\n        },\r\n\r\n    },\r\n    mounted() {\r\n        //this.connect();\r\n    },\r\n    beforeUnmount() {\r\n        // 断开连接等清理工作\r\n        this.disconnect();\r\n    },\r\n};\r\n</script>","<template>\r\n    <div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'FileTransfer',\r\n    // 只包含文件传输所需的数据和方法\r\n    data() {\r\n        return {\r\n            // 文件传输相关数据\r\n            destination: null, // 目标用户标识\r\n            dataChannel: null,\r\n            receivedChunks: [], // 接收文件的数据块\r\n            peerConnection: new RTCPeerConnection({\r\n                iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\r\n            }),\r\n            bufferedCandidates: [], // 用于暂存ICE候选\r\n        };\r\n    },\r\n    methods: {\r\n        // 文件传输相关方法\r\n        //应答端创建或监听数据通道\r\n        handleDataChannel(event) {\r\n            this.dataChannel = event.channel;\r\n\r\n            this.setupDataChannelEvents();\r\n        },\r\n\r\n        setupDataChannelEvents() {\r\n            // 设置数据通道的消息处理\r\n            this.dataChannel.onmessage = event => {\r\n                // 检查接收到的数据是否是二进制类型\r\n                if (event.data instanceof ArrayBuffer) {\r\n                    // 这是接收到的文件数据块\r\n                    this.receivedChunks.push(event.data);\r\n                    console.log(\"Received a file chunk\");\r\n                } else {\r\n                    try {\r\n                        // 尝试解析接收到的消息为JSON\r\n                        const message = JSON.parse(event.data);\r\n                        if (message.type === 'readyToReceive') {\r\n                            // 对方已准备好接收文件，可以开始发送文件\r\n                            console.log(\"对方已准备好接收文件\");\r\n                            this.$emit('join-room-success');\r\n                        } else if (message.type === 'readyForFileTransfer') {\r\n                            // 对方请求准备接收文件的消息，发送确认回复\r\n                            this.dataChannel.send(JSON.stringify({ type: 'readyToReceive' }));\r\n                            console.log(\"发送 readyToReceive 消息\");\r\n                        } else if (message.action === \"start\") {\r\n                            // 开始接收新文件\r\n                            this.receivedChunks = []; // 清空接收缓冲区\r\n                            this.receivedMetadata = message;\r\n                            console.log(\"开始接收文件\", message.fileName);\r\n                        } else if (message.action === \"end\") {\r\n                            // 文件传输完成，重组文件\r\n                            const receivedFile = new Blob(this.receivedChunks, { type: this.receivedMetadata.fileType });\r\n                            const url = URL.createObjectURL(receivedFile);\r\n                            console.log(`文件接收完成，下载链接: ${url}`);\r\n                            // 弹出对话框询问用户下一步操作\r\n                            const shouldDownload = confirm(\"文件接收完成。点击确定下载，取消上传到数据库。注意只可上传图片！\");\r\n                            console.log(\"shouldDownload is\", shouldDownload);\r\n                            if (shouldDownload) {\r\n                                // 下载文件\r\n                                const downloadLink = document.createElement(\"a\");\r\n                                document.body.appendChild(downloadLink);\r\n                                downloadLink.style = \"display: none\";\r\n                                downloadLink.href = url;\r\n                                downloadLink.download = this.receivedMetadata.fileName;\r\n                                downloadLink.click();\r\n                                window.URL.revokeObjectURL(url);  // 清理资源\r\n                                console.log(`文件已经准备好下载: ${this.receivedMetadata.fileName}`);\r\n                            } else {\r\n                                // 上传到服务器\r\n                                this.$emit('file-upload-request', { file: receivedFile });\r\n                            }\r\n\r\n\r\n                            // 重置接收状态，准备接收下一个文件\r\n                            this.receivedChunks = [];\r\n                            this.receivedMetadata = null;\r\n\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(\"接收到的数据不是有效的 JSON 格式:\", error);\r\n                    }\r\n                }\r\n            };\r\n\r\n\r\n            this.dataChannel.onopen = () => {\r\n                console.log(\"DataChannel Opened\");\r\n                this.fileTransferStatus = \"连接已建立，可以传输文件\";\r\n                this.sendReadyForFileTransfer(); // 通知准备好接收文件\r\n            };\r\n\r\n            this.dataChannel.onclose = () => {\r\n                console.log(\"DataChannel Closed\");\r\n                this.fileTransferStatus = \"连接已关闭\";\r\n            };\r\n\r\n            this.dataChannel.onerror = function (error) {\r\n                console.error(\"Data Channel Error:\", error);\r\n            };\r\n\r\n            this.dataChannel.onclose = function () {\r\n                console.log(\"Data channel is closed.\");\r\n            };\r\n        },\r\n\r\n        //发起端建立信道\r\n        setupWebRTCDataChannel() {\r\n            if (!this.destination) {\r\n                console.log(\"No destination set, waiting...\");\r\n                return; // 如果没有设置目标，就返回并等待\r\n            }\r\n            // 已经在data()中初始化peerConnection\r\n            // 监听ICE候选人并通过WebSocket发送\r\n            this.peerConnection.onicecandidate = event => {\r\n                if (event.candidate) {\r\n                    // 使用 this.$emit 触发事件而不是直接调用 sendMessage\r\n                    this.$emit('send-message', {\r\n                        type: 'candidate',\r\n                        candidate: event.candidate\r\n                    });\r\n                }\r\n            };\r\n\r\n            // 使用箭头函数确保this指向Vue组件实例\r\n            this.peerConnection.oniceconnectionstatechange = () => {\r\n                console.log(\"ICE connection state change:\", this.peerConnection.iceConnectionState);\r\n            };\r\n\r\n            // 创建数据通道\r\n            const dataChannel = this.peerConnection.createDataChannel(\"fileTransferChannel\");\r\n            this.dataChannel = dataChannel;\r\n\r\n            // 设置数据通道的消息处理\r\n            dataChannel.onmessage = event => {\r\n                // 检查接收到的数据是否是二进制类型\r\n                if (event.data instanceof ArrayBuffer) {\r\n                    // 这是接收到的文件数据块\r\n                    this.receivedChunks.push(event.data);\r\n                    console.log(\"Received a file chunk\");\r\n                } else {\r\n                    try {\r\n                        // 尝试解析接收到的消息为JSON\r\n                        const message = JSON.parse(event.data);\r\n                        if (message.type === 'readyToReceive') {\r\n                            // 对方已准备好接收文件，可以开始发送文件\r\n                            console.log(\"对方已准备好接收文件\");\r\n                            this.$emit('join-room-success');\r\n                        } else if (message.type === 'readyForFileTransfer') {\r\n                            // 对方请求准备接收文件的消息，发送确认回复\r\n                            this.dataChannel.send(JSON.stringify({ type: 'readyToReceive' }));\r\n                            console.log(\"发送 readyToReceive 消息\");\r\n                        } else if (message.action === \"start\") {\r\n                            // 开始接收新文件\r\n                            this.receivedChunks = []; // 清空接收缓冲区\r\n                            this.receivedMetadata = message;\r\n                            console.log(\"开始接收文件\", message.fileName);\r\n                        } else if (message.action === \"end\") {\r\n                            // 文件传输完成，重组文件\r\n                            const receivedFile = new Blob(this.receivedChunks, { type: this.receivedMetadata.fileType });\r\n                            const url = URL.createObjectURL(receivedFile);\r\n                            console.log(`文件接收完成，下载链接: ${url}`);\r\n\r\n                            // 弹出对话框询问用户下一步操作\r\n                            const shouldDownload = confirm(\"文件接收完成。点击确定下载，取消上传到数据库。注意只可上传图片！\");\r\n                            if (shouldDownload) {\r\n                                // 下载文件\r\n                                const downloadLink = document.createElement(\"a\");\r\n                                document.body.appendChild(downloadLink);\r\n                                downloadLink.style = \"display: none\";\r\n                                downloadLink.href = url;\r\n                                downloadLink.download = this.receivedMetadata.fileName;\r\n                                downloadLink.click();\r\n                                window.URL.revokeObjectURL(url);  // 清理资源\r\n                                console.log(`文件已经准备好下载: ${this.receivedMetadata.fileName}`);\r\n                            } else {\r\n                                // 上传到服务器\r\n                                this.$emit('file-upload-request', { file: receivedFile });\r\n                            }\r\n\r\n                            // 重置接收状态，准备接收下一个文件\r\n                            this.receivedChunks = [];\r\n                            this.receivedMetadata = null;\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(\"接收到的数据不是有效的 JSON 格式:\", error);\r\n                    }\r\n                }\r\n            };\r\n\r\n\r\n            dataChannel.onopen = () => {\r\n                console.log(\"DataChannel Opened\");\r\n                this.fileTransferStatus = \"连接已建立，可以传输文件\";\r\n                this.sendReadyForFileTransfer(); // 通知准备好接收文件\r\n            };\r\n\r\n            dataChannel.onclose = () => {\r\n                console.log(\"DataChannel Closed\");\r\n                this.fileTransferStatus = \"连接已关闭\";\r\n            };\r\n\r\n            dataChannel.onerror = function (error) {\r\n                console.error(\"Data Channel Error:\", error);\r\n            };\r\n\r\n            dataChannel.onclose = function () {\r\n                console.log(\"Data channel is closed.\");\r\n            };\r\n\r\n            // 创建offer并发送\r\n            this.peerConnection.createOffer().then(offer => {\r\n                return this.peerConnection.setLocalDescription(offer);\r\n            }).then(() => {\r\n                this.$emit('send-message', {\r\n                    type: 'offer',\r\n                    offer: this.peerConnection.localDescription\r\n                });\r\n            }).catch(error => console.error(\"创建offer时发生错误:\", error));\r\n\r\n        },\r\n\r\n        handleFileSignalMessage(type, signalData) {\r\n\r\n            //console.log(\"Received signal data:\", signalData);\r\n            //console.log(\"Signal type is:\", type);\r\n\r\n            // 原有文件传输的信令处理...\r\n            switch (type) {\r\n                case 'offer':\r\n                    // 现在`signalData`直接是`offer`的内容\r\n                    this.handleOffer(signalData);\r\n                    break;\r\n                case 'answer':\r\n                    this.handleAnswer(signalData);\r\n                    break;\r\n                case 'candidate':\r\n                    this.handleNewICECandidate(signalData);\r\n                    break;\r\n                default:\r\n                    console.error('Received unknown signal message type:', type);\r\n            }\r\n        },\r\n\r\n        handleOffer(offerDesc) {\r\n            if (!this.peerConnection) {\r\n                console.error(\"peerConnection is not initialized.\");\r\n                return;\r\n            }\r\n            // 此处假设offerDesc已经是解析好的offer对象\r\n            const offer = new RTCSessionDescription(offerDesc);\r\n            this.peerConnection.setRemoteDescription(offer)\r\n                .then(() => this.peerConnection.createAnswer())\r\n                .then(answer => this.peerConnection.setLocalDescription(answer))\r\n                .then(() => {\r\n                    // 注意这里向外发送的消息也应该包含`type`字段\r\n                    this.$emit('send-message', {\r\n                        type: 'answer',\r\n                        answer: this.peerConnection.localDescription,\r\n                        destination: this.destination\r\n                    });\r\n                })\r\n                .catch(error => console.error('Error setting remote description:', error));\r\n        },\r\n\r\n        handleAnswer(answerDesc) {\r\n            const answer = new RTCSessionDescription(answerDesc);\r\n            if (this.peerConnection.signalingState === 'have-local-offer') {\r\n                this.peerConnection.setRemoteDescription(answer)\r\n                    .then(() => {\r\n                        // 应用之前缓存的ICE候选\r\n                        this.applyBufferedCandidates();\r\n                    })\r\n                    .catch(error => console.error('Error setting remote description:', error));\r\n            } else {\r\n                console.error(`Cannot set remote answer in current signaling state: ${this.peerConnection.signalingState}`);\r\n            }\r\n        },\r\n\r\n        handleNewICECandidate(candidateData) {\r\n            const candidate = new RTCIceCandidate({\r\n                sdpMLineIndex: candidateData.sdpMLineIndex,\r\n                candidate: candidateData.candidate\r\n            });\r\n\r\n            if (this.peerConnection.remoteDescription) {\r\n                this.peerConnection.addIceCandidate(candidate)\r\n                    .catch(error => console.error('Error adding received ICE candidate:', error));\r\n            } else {\r\n                // 如果远程描述尚未设置，暂存ICE候选\r\n                this.bufferedCandidates.push(candidate);\r\n            }\r\n        },\r\n\r\n        // 在handleOffer和handleAnswer中设置远程描述后调用此方法\r\n        applyBufferedCandidates() {\r\n            this.bufferedCandidates.forEach(candidate =>\r\n                this.peerConnection.addIceCandidate(candidate)\r\n                    .catch(error => console.error('Error adding buffered ICE candidate:', error))\r\n            );\r\n            // 清空暂存列表\r\n            this.bufferedCandidates = [];\r\n        },\r\n\r\n        sendReadyForFileTransfer() {\r\n            if (this.dataChannel && this.dataChannel.readyState === \"open\") {\r\n                this.dataChannel.send(JSON.stringify({ type: 'readyForFileTransfer' }));\r\n                console.log(\"readyForFileTransfer\");\r\n            }\r\n        },\r\n\r\n        handleFileSelected(event) {\r\n            const file = event.target.files[0];\r\n            if (file) {\r\n                this.sendFile(file);\r\n            }\r\n        },\r\n\r\n        sendFile(file) {\r\n            if (this.dataChannel.readyState !== \"open\") {\r\n                this.errorMessage = \"数据通道未打开，无法发送文件。\";\r\n                return;\r\n            }\r\n            console.log(\"开始发送文件\");\r\n            const chunkSize = 16384; // 16KB\r\n            let offset = 0;\r\n\r\n            // 发送文件元数据\r\n            const metadata = {\r\n                fileName: file.name,\r\n                fileSize: file.size,\r\n                fileType: file.type,\r\n                action: \"start\"\r\n            };\r\n            this.dataChannel.send(JSON.stringify(metadata));\r\n\r\n            // 读取并发送文件的一部分\r\n            const readSlice = o => {\r\n                const reader = new FileReader();\r\n                const slice = file.slice(offset, o + chunkSize);\r\n                reader.onload = () => {\r\n                    this.dataChannel.send(reader.result);\r\n                    if (file.size > offset) {\r\n                        offset += chunkSize;\r\n                        readSlice(offset);\r\n                    } else {\r\n                        // 文件传输完成\r\n                        this.dataChannel.send(JSON.stringify({ action: \"end\" }));\r\n                        // 文件传输完成后\r\n                        this.$emit('file-transfer-complete');\r\n                    }\r\n                };\r\n                reader.onerror = (e) => console.error(\"Error reading file:\", e);\r\n                reader.readAsArrayBuffer(slice);\r\n            };\r\n\r\n            readSlice(0);\r\n        },\r\n\r\n        cleanupFileChat() {\r\n            // 关闭RTCPeerConnection\r\n            if (this.peerConnection) {\r\n                this.peerConnection.close();\r\n                this.peerConnection = null;\r\n                console.log(\"RTCPeerConnection closed.\");\r\n            }\r\n        },\r\n\r\n    },\r\n    mounted() {\r\n        // 初始化文件传输功能\r\n        this.peerConnection.ondatachannel = this.handleDataChannel;\r\n    },\r\n    beforeUnmount() {\r\n        // 清理文件传输资源\r\n        this.cleanupFileChat();\r\n    },\r\n};\r\n</script>","import { render } from \"./FileTransfer.vue?vue&type=template&id=66cf1549\"\nimport script from \"./FileTransfer.vue?vue&type=script&lang=js\"\nexport * from \"./FileTransfer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"video-container\" v-if=\"isChatting\" @mousedown=\"dragStart\">\r\n        <video id=\"remoteVideo\" autoplay></video>\r\n        <video id=\"localVideo\" autoplay muted class=\"local-video\"></video>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'VideoChat',\r\n    // 只包含视频聊天所需的数据和方法\r\n    data() {\r\n        return {\r\n            // 视频聊天相关数据\r\n            // 新的 RTCPeerConnection 对象和视频流变量\r\n            videoPeerConnection: new RTCPeerConnection({\r\n                iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n            }),\r\n            localStream: null,\r\n            remoteStream: new MediaStream(),\r\n            bufferedVideoCandidates: [], // 用于暂存视频ICE候选\r\n            isInitiator: false, //用于标记是否为发送视频offer的用户\r\n            isChatting: false,  //是否正在聊天\r\n\r\n            // 拖动状态\r\n            dragging: false,\r\n            // 拖动开始时的坐标\r\n            startX: 0,\r\n            startY: 0,\r\n        };\r\n    },\r\n    methods: {\r\n        // 视频聊天相关方法\r\n        // 添加媒体流处理\r\n        // 新增方法获取本地视频流并初始化视频通话\r\n        initVideoCall() {\r\n            this.isChatting = true;\r\n            return navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n                .then(stream => {\r\n                    this.localStream = stream;\r\n                    // 显示本地视频流\r\n                    const localVideo = document.querySelector('#localVideo');\r\n                    if (localVideo) localVideo.srcObject = stream;\r\n\r\n                    // 添加本地流到 RTCPeerConnection\r\n                    stream.getTracks().forEach(track => {\r\n                        this.videoPeerConnection.addTrack(track, stream);\r\n                    });\r\n\r\n                    this.setupVideoCall();\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error accessing media devices:', error);\r\n                });\r\n        },\r\n\r\n        // 设置视频通话的 RTCPeerConnection\r\n        setupVideoCall() {\r\n            this.videoPeerConnection.ontrack = event => {\r\n                event.streams[0].getTracks().forEach(track => {\r\n                    this.remoteStream.addTrack(track);\r\n                });\r\n            };\r\n            // 显示远程视频流\r\n            const remoteVideo = document.querySelector('#remoteVideo');\r\n            if (remoteVideo) remoteVideo.srcObject = this.remoteStream;\r\n\r\n            // Handle ICE candidates\r\n            this.videoPeerConnection.onicecandidate = event => {\r\n                if (event.candidate) {\r\n                    this.$emit('send-message', {\r\n                        type: 'video-candidate',\r\n                        candidate: event.candidate\r\n                    });\r\n                }\r\n            };\r\n\r\n            // 创建offer\r\n            if (this.isInitiator) { // 假设有某种方式决定谁是通话的发起者\r\n                this.videoPeerConnection.createOffer()\r\n                    .then(offer => this.videoPeerConnection.setLocalDescription(offer))\r\n                    .then(() => {\r\n                        this.$emit('send-message', {\r\n                            type: 'video-offer',\r\n                            offer: this.videoPeerConnection.localDescription\r\n                        });\r\n\r\n                    })\r\n                    .catch(error => console.error('Error creating video offer:', error));\r\n            }\r\n        },\r\n\r\n        // 新增方法处理视频信令消息\r\n        handleVideoSignalMessage(type, signalData) {\r\n            switch (type) {\r\n                case 'video-offer':\r\n                    // 确保在处理视频offer之前，已经初始化了视频通话环境\r\n                    this.initVideoCall().then(() => {\r\n                        this.handleVideoOffer(signalData);\r\n                    });\r\n                    this.isChatting = true;\r\n                    break;\r\n                case 'video-answer':\r\n                    this.handleVideoAnswer(signalData);\r\n                    break;\r\n                case 'video-candidate':\r\n                    this.handleNewVideoICECandidate(signalData);\r\n                    break;\r\n                // 添加其他处理逻辑...\r\n            }\r\n        },\r\n\r\n        // 实现视频信令消息的处理方法\r\n        // 处理收到的视频offer\r\n        handleVideoOffer(offerDesc) {\r\n\r\n            const offer = new RTCSessionDescription(offerDesc);\r\n            this.videoPeerConnection.setRemoteDescription(offer)\r\n                .then(() => this.videoPeerConnection.createAnswer())\r\n                .then(answer => this.videoPeerConnection.setLocalDescription(answer))\r\n                .then(() => {\r\n                    // 发送视频answer响应\r\n                    this.$emit('send-message', {\r\n                        type: 'video-answer',\r\n                        answer: this.videoPeerConnection.localDescription\r\n                    });\r\n\r\n                })\r\n                .catch(error => console.error('Error during handleVideoOffer:', error));\r\n        },\r\n\r\n        // 处理收到的视频answer\r\n        handleVideoAnswer(answerDesc) {\r\n            const answer = new RTCSessionDescription(answerDesc);\r\n            this.videoPeerConnection.setRemoteDescription(answer)\r\n                .then(() => {\r\n                    // 应用之前缓存的视频ICE候选\r\n                    this.applyBufferedVideoCandidates();\r\n                })\r\n                .catch(error => console.error('Error during handleVideoAnswer:', error));\r\n        },\r\n\r\n        // 处理新的视频ICE candidate\r\n        handleNewVideoICECandidate(candidateData) {\r\n            const candidate = new RTCIceCandidate({\r\n                sdpMLineIndex: candidateData.sdpMLineIndex,\r\n                candidate: candidateData.candidate\r\n            });\r\n            if (this.videoPeerConnection.remoteDescription && this.videoPeerConnection.remoteDescription.type) {\r\n                this.videoPeerConnection.addIceCandidate(candidate)\r\n                    .catch(error => console.error('Error adding received video ICE candidate:', error));\r\n            } else {\r\n                // 如果远程描述尚未设置，暂存视频ICE候选\r\n                this.bufferedVideoCandidates.push(candidate);\r\n            }\r\n        },\r\n\r\n        // 在设置远程描述后应用缓存的视频ICE候选\r\n        applyBufferedVideoCandidates() {\r\n            this.bufferedVideoCandidates.forEach(candidate =>\r\n                this.videoPeerConnection.addIceCandidate(candidate)\r\n                    .catch(error => console.error('Error adding buffered video ICE candidate:', error))\r\n            );\r\n            // 清空暂存列表\r\n            this.bufferedVideoCandidates = [];\r\n        },\r\n\r\n        // 清理视频聊天资源的方法\r\n        cleanupVideoChat() {\r\n            // 关闭本地视频流的轨道\r\n            if (this.localStream) {\r\n                this.localStream.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n                // 可选：清除视频元素的源\r\n                const localVideo = document.querySelector('#localVideo');\r\n                if (localVideo) localVideo.srcObject = null;\r\n            }\r\n\r\n            // 关闭远程视频流的轨道（通常不必要，但保持完整性）\r\n            if (this.remoteStream) {\r\n                this.remoteStream.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n                // 可选：清除视频元素的源\r\n                const remoteVideo = document.querySelector('#remoteVideo');\r\n                if (remoteVideo) remoteVideo.srcObject = null;\r\n            }\r\n\r\n            // 关闭视频 RTCPeerConnection\r\n            if (this.videoPeerConnection) {\r\n                this.videoPeerConnection.close();\r\n                this.videoPeerConnection = null;\r\n            }\r\n\r\n            // UI清理逻辑，例如隐藏视频区域，显示结束提示等\r\n            this.isChatting = false;\r\n        },\r\n\r\n        dragStart(e) {\r\n            this.dragging = true;\r\n            this.startX = e.clientX;\r\n            this.startY = e.clientY;\r\n\r\n            // 确保移动过程中文本不会被选中导致拖动不流畅\r\n            e.preventDefault();\r\n\r\n            document.addEventListener('mousemove', this.dragMove);\r\n            document.addEventListener('mouseup', this.dragEnd);\r\n        },\r\n        dragMove(e) {\r\n            if (!this.dragging) return;\r\n\r\n            const dx = e.clientX - this.startX;\r\n            const dy = e.clientY - this.startY;\r\n            this.startX = e.clientX;\r\n            this.startY = e.clientY;\r\n\r\n            // 使用transform进行位移\r\n            const currentTransform = window.getComputedStyle(this.$el).transform;\r\n            let matrix = currentTransform === 'none'\r\n                ? 'matrix(1, 0, 0, 1, 0, 0)'\r\n                : currentTransform;\r\n            let matrixValues = matrix.match(/matrix.*\\((.+)\\)/)[1].split(', ');\r\n            let translateX = parseInt(matrixValues[4]) + dx;\r\n            let translateY = parseInt(matrixValues[5]) + dy;\r\n\r\n            this.$el.style.transform = `translate(${translateX}px, ${translateY}px)`;\r\n        },\r\n        dragEnd() {\r\n            this.dragging = false;\r\n            document.removeEventListener('mousemove', this.dragMove);\r\n            document.removeEventListener('mouseup', this.dragEnd);\r\n        },\r\n    },\r\n    mounted() {\r\n        // 初始化视频聊天功能\r\n    },\r\n    beforeUnmount() {\r\n        // 清理视频聊天资源\r\n        this.cleanupVideoChat();\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.video-container {\r\n    position: fixed;\r\n    /* 或 absolute，根据需要 */\r\n    top: 0;\r\n    left: 0;\r\n    /* 其他样式保持不变 */\r\n}\r\n\r\n\r\n#remoteVideo {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    /* 保持视频比例，可能会裁剪一部分视频以填充容器 */\r\n}\r\n\r\n.local-video {\r\n    position: absolute;\r\n    bottom: 20px;\r\n    /* 右下角，距底部20px */\r\n    right: 20px;\r\n    /* 右下角，距右侧20px */\r\n    width: 20%;\r\n    /* 本地视频大小，根据需要调整 */\r\n    z-index: 10;\r\n    /* 确保本地视频在远程视频上方 */\r\n}\r\n</style>\r\n","import { render } from \"./VideoChat.vue?vue&type=template&id=5f49bbec&scoped=true\"\nimport script from \"./VideoChat.vue?vue&type=script&lang=js\"\nexport * from \"./VideoChat.vue?vue&type=script&lang=js\"\n\nimport \"./VideoChat.vue?vue&type=style&index=0&id=5f49bbec&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5f49bbec\"]])\n\nexport default __exports__","import { render } from \"./WebRTCSignalExchange.vue?vue&type=template&id=c27893e0\"\nimport script from \"./WebRTCSignalExchange.vue?vue&type=script&lang=js\"\nexport * from \"./WebRTCSignalExchange.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./DoctorDashboard.vue?vue&type=template&id=28b1baf9&scoped=true\"\nimport script from \"./DoctorDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./DoctorDashboard.vue?vue&type=script&lang=js\"\n\nimport \"./DoctorDashboard.vue?vue&type=style&index=0&id=28b1baf9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-28b1baf9\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\nimport DoctorLogin from '../views/DoctorLogin.vue';\nimport DoctorRegister from '../views/DoctorRegister.vue';\nimport DoctorDashboard from '../views/DoctorDashboard.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'DoctorLogin',\n    component: DoctorLogin,\n  },\n  {\n    path: '/doctor-register',\n    name: 'DoctorRegister',\n    component: DoctorRegister,\n  },\n  {\n    path: '/doctor-dashboard',\n    name: 'DoctorDashboard',\n    component: DoctorDashboard,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router' // 确保路径正确\r\n\r\ncreateApp(App)\r\n  .use(router)\r\n  .mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(1007); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_createVNode","_component_router_view","script","__exports__","render","class","src","_imports_0","alt","type","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","args","$setup","handleLogin","$event","doctorId","placeholder","required","password","_hoisted_5","onClick","navigateToRegister","API","axios","create","baseURL","headers","interceptors","request","use","config","token","sessionStorage","getItem","console","log","error","Promise","reject","login","async","removeItem","response","post","username","data","startsWith","setItem","success","message","errorMessage","register","setup","ref","router","useRouter","result","value","push","alert","disabled","_hoisted_6","handleRegister","doctorName","doctorGender","_hoisted_7","_hoisted_8","registrationData","key","_normalizeClass","active","$data","currentView","_toDisplayString","currentUserId","logout","_hoisted_9","_renderList","patients","patient","id","name","age","gender","phoneNumber","visitTime","files","length","$options","showPatientFiles","_hoisted_10","_hoisted_11","startEdit","_hoisted_12","deletePatientMethod","_hoisted_13","fetchPatients","editingPatient","_hoisted_14","_hoisted_15","updatePatientInfo","_createTextVNode","_hoisted_16","_hoisted_17","_hoisted_18","disease","_hoisted_19","maxlength","_hoisted_20","_hoisted_21","cancelEdit","_createCommentVNode","_hoisted_22","_hoisted_23","addNewPatient","newPatient","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","isInRoom","_hoisted_35","roomCode","leaveRoom","_hoisted_36","onChange","handleFileSelected","sendFile","isSending","_hoisted_37","fileTransferStatus","_hoisted_34","createRoom","joinRoom","_hoisted_38","_hoisted_39","_hoisted_40","startChat","endChat","showFilesModal","_hoisted_41","_hoisted_42","closeModal","currentFile","_hoisted_43","_hoisted_44","previousFile","nextFile","_createBlock","_component_WebRTCSignalExchange","url","topic","appDestination","onFileTransferComplete","handleFileTransferComplete","onFileUploadRequest","handleUploadToServer","onJoinRoomSuccess","handleJoinRoomSuccess","_hoisted_45","fileAPI","addPatient","patientData","updatePatient","put","getPatientsByDoctorId","get","deletePatient","patientId","delete","_component_FileTransfer","onSendMessage","sendMessage","handleFileUploadRequest","_component_VideoChat","destination","dataChannel","receivedChunks","peerConnection","RTCPeerConnection","iceServers","urls","bufferedCandidates","methods","handleDataChannel","event","this","channel","setupDataChannelEvents","onmessage","ArrayBuffer","JSON","parse","$emit","send","stringify","action","receivedMetadata","fileName","receivedFile","Blob","fileType","URL","createObjectURL","shouldDownload","confirm","downloadLink","document","createElement","body","appendChild","style","href","download","click","window","revokeObjectURL","file","onopen","sendReadyForFileTransfer","onclose","onerror","setupWebRTCDataChannel","onicecandidate","candidate","oniceconnectionstatechange","iceConnectionState","createDataChannel","createOffer","then","offer","setLocalDescription","localDescription","catch","handleFileSignalMessage","signalData","handleOffer","handleAnswer","handleNewICECandidate","offerDesc","RTCSessionDescription","setRemoteDescription","createAnswer","answer","answerDesc","signalingState","applyBufferedCandidates","candidateData","RTCIceCandidate","sdpMLineIndex","remoteDescription","addIceCandidate","forEach","readyState","target","chunkSize","offset","metadata","fileSize","size","readSlice","o","reader","FileReader","slice","onload","e","readAsArrayBuffer","cleanupFileChat","close","mounted","ondatachannel","beforeUnmount","autoplay","muted","isChatting","onMousedown","dragStart","videoPeerConnection","localStream","remoteStream","MediaStream","bufferedVideoCandidates","isInitiator","dragging","startX","startY","initVideoCall","navigator","mediaDevices","getUserMedia","video","audio","stream","localVideo","querySelector","srcObject","getTracks","track","addTrack","setupVideoCall","ontrack","streams","remoteVideo","handleVideoSignalMessage","handleVideoOffer","handleVideoAnswer","handleNewVideoICECandidate","applyBufferedVideoCandidates","cleanupVideoChat","stop","clientX","clientY","preventDefault","addEventListener","dragMove","dragEnd","dx","dy","currentTransform","getComputedStyle","$el","transform","matrix","matrixValues","match","split","translateX","parseInt","translateY","removeEventListener","components","FileTransfer","VideoChat","props","String","stompClient","isConnected","initConnection","connect","substring","urlWithToken","socket","SockJS","Stomp","frame","subscribe","$refs","fileTransferComponent","userId","terminateConnectionWithUser","handleSignalMessage","waitForConnection","callback","setTimeout","connected","videoChatComponent","signalMessage","content","msgContent","msg","startVideoChat","disconnect","watch","newVal","WebRTCSignalExchange","signalServerUrl","signalTopic","fileInput","currentFileIndex","patientFiles","webRTCSignalExchange","sendRoomJoinSignal","waitForConnectionAndSend","includes","resetRoomState","selectedFile","prompt","formData","FormData","append","entries","patientsData","fetchPatientFiles","onMounted","patientIndex","findIndex","p","Error","currentTime","Date","toISOString","doctor","routes","path","component","DoctorLogin","DoctorRegister","DoctorDashboard","createRouter","history","createWebHistory","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}